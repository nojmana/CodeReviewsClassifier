CHANGE-ID,REVISION-ID,FILENAME,CR AUTHOR = PR AUTHOR,DIFF-HUNK,BODY
66046519,86016d5e9d2f52c5d6170f252e283a02d3a6100b,',False,"@@ -0,0 +1,3247 @@
+/*******************************************************************************",Not sure what happened here but it shouldn't be a new file.
120772656,72cd36c0188ea1e3bdc9893d128d02f6254fbedf,.copyrightignore,False,"@@ -0,0 +1,30 @@
+# *******************************************************************************
+# Copyright (c) 2017, 2018 IBM Corp. and others","Initial date should be the year the file was originally authored, please update to `2018`"
120772656,72cd36c0188ea1e3bdc9893d128d02f6254fbedf,.copyrightignore,False,"@@ -0,0 +1,30 @@
+# *******************************************************************************
+# Copyright (c) 2017, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+# *******************************************************************************
+# TODO README ON COPYRIGHT WHITELIST
+# *******************************************************************************/
+/doc/
+#
+/job
+/*.ignore
+debugtools/**/*.ignore
+buildspecs/*.ignore
+/jobs/pipelines/",Please add a newline at the end of the file
120772656,72cd36c0188ea1e3bdc9893d128d02f6254fbedf,.copyrightignore,False,"@@ -0,0 +1,30 @@
+# *******************************************************************************
+# Copyright (c) 2017, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+# *******************************************************************************
+# TODO README ON COPYRIGHT WHITELIST",Please fill in this README section on how to use the .copyrightignore file
121152388,72cd36c0188ea1e3bdc9893d128d02f6254fbedf,.copyrightignore,True,"@@ -0,0 +1,30 @@
+# *******************************************************************************
+# Copyright (c) 2017, 2018 IBM Corp. and others",fixed
121152445,72cd36c0188ea1e3bdc9893d128d02f6254fbedf,.copyrightignore,True,"@@ -0,0 +1,30 @@
+# *******************************************************************************
+# Copyright (c) 2017, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+# *******************************************************************************
+# TODO README ON COPYRIGHT WHITELIST
+# *******************************************************************************/
+/doc/
+#
+/job
+/*.ignore
+debugtools/**/*.ignore
+buildspecs/*.ignore
+/jobs/pipelines/",fixed
177508561,e34ab3c4f683be8fe7b399656945e39e7c970496,.copyrightignore,False,"@@ -0,0 +1,39 @@
+# *******************************************************************************
+# Copyright (c) 2018, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+# *******************************************************************************
+#  THE FOLLOWING ARE EXAMPLES OF SYNTAXES copyrightCheck SUPPORTS:
+#  1.**/jobs/**# path contains ""jobs"" folder, but not root directory
+#  2./doc#root root level directory and file named ""doc""
+#  3./debugtools/**/*.ignore# all .ignore file in the root directory debugtools
+#  4./*.ignore #all root directory .ignore files
+#  5.**/jobs/pipelines/#pipeline folder follows closely with jobs not in root directory
+#  6.*.ignore#all ignore files only
+#  7.**/jobs/**/pipelines/#directory path contains both jobs and pipelines not root directory
+#  8.*job* all things at contains characters in between stars
+# *******************************************************************************/
+**/jobs/**#comment
+/doc
+*job*
+#*.ignore
+/*.ignore
+/debugtools/**/*.ignore
+**/jobs/**/pipelines/
+**/jobs/pipelines/",I think these were examples just for testing purposes ^ and should be removed.
177545156,e34ab3c4f683be8fe7b399656945e39e7c970496,.copyrightignore,True,"@@ -0,0 +1,39 @@
+# *******************************************************************************
+# Copyright (c) 2018, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+# *******************************************************************************
+#  THE FOLLOWING ARE EXAMPLES OF SYNTAXES copyrightCheck SUPPORTS:
+#  1.**/jobs/**# path contains ""jobs"" folder, but not root directory
+#  2./doc#root root level directory and file named ""doc""
+#  3./debugtools/**/*.ignore# all .ignore file in the root directory debugtools
+#  4./*.ignore #all root directory .ignore files
+#  5.**/jobs/pipelines/#pipeline folder follows closely with jobs not in root directory
+#  6.*.ignore#all ignore files only
+#  7.**/jobs/**/pipelines/#directory path contains both jobs and pipelines not root directory
+#  8.*job* all things at contains characters in between stars
+# *******************************************************************************/
+**/jobs/**#comment
+/doc
+*job*
+#*.ignore
+/*.ignore
+/debugtools/**/*.ignore
+**/jobs/**/pipelines/
+**/jobs/pipelines/","Not sure whether you wanted all of them removed but have done so. 
We can add others back if needed."
178039354,e34ab3c4f683be8fe7b399656945e39e7c970496,.copyrightignore,False,"@@ -0,0 +1,34 @@
+# *******************************************************************************
+# Copyright (c) 2018, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+#
+# *******************************************************************************
+#  THE FOLLOWING ARE EXAMPLES OF SYNTAXES copyrightCheck SUPPORTS:",I expect copyrightCheck should be copyrightignore
178039354,e34ab3c4f683be8fe7b399656945e39e7c970496,.copyrightignore,False,"@@ -0,0 +1,34 @@
+# *******************************************************************************
+# Copyright (c) 2018, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+#
+# *******************************************************************************
+#  THE FOLLOWING ARE EXAMPLES OF SYNTAXES copyrightCheck SUPPORTS:
+#  1.**/jobs/**  # path contains ""jobs"" folder, but not root directory
+#  2./doc  #root root level directory and file named ""doc""",The word `root` is repeated twice
178039354,e34ab3c4f683be8fe7b399656945e39e7c970496,.copyrightignore,False,"@@ -0,0 +1,34 @@
+# *******************************************************************************
+# Copyright (c) 2018, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+#
+# *******************************************************************************
+#  THE FOLLOWING ARE EXAMPLES OF SYNTAXES copyrightCheck SUPPORTS:
+#  1.**/jobs/**  # path contains ""jobs"" folder, but not root directory
+#  2./doc  #root root level directory and file named ""doc""
+#  3./debugtools/**/*.ignore  # all .ignore file in the root directory debugtools
+#  4./*.ignore #all root directory .ignore files
+#  5.**/jobs/pipelines/  #pipeline folder follows closely with jobs not in root directory",example uses `pipelines` while description uses `pipeline`
178039354,e34ab3c4f683be8fe7b399656945e39e7c970496,.copyrightignore,False,"@@ -0,0 +1,34 @@
+# *******************************************************************************
+# Copyright (c) 2018, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+#
+# *******************************************************************************
+#  THE FOLLOWING ARE EXAMPLES OF SYNTAXES copyrightCheck SUPPORTS:
+#  1.**/jobs/**  # path contains ""jobs"" folder, but not root directory
+#  2./doc  #root root level directory and file named ""doc""
+#  3./debugtools/**/*.ignore  # all .ignore file in the root directory debugtools
+#  4./*.ignore #all root directory .ignore files
+#  5.**/jobs/pipelines/  #pipeline folder follows closely with jobs not in root directory
+#  6.*.ignore  #all ignore files only",example uses `.ignore` while description uses `ignore`
178039354,e34ab3c4f683be8fe7b399656945e39e7c970496,.copyrightignore,False,"@@ -0,0 +1,34 @@
+# *******************************************************************************
+# Copyright (c) 2018, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+#
+# *******************************************************************************
+#  THE FOLLOWING ARE EXAMPLES OF SYNTAXES copyrightCheck SUPPORTS:
+#  1.**/jobs/**  # path contains ""jobs"" folder, but not root directory
+#  2./doc  #root root level directory and file named ""doc""
+#  3./debugtools/**/*.ignore  # all .ignore file in the root directory debugtools
+#  4./*.ignore #all root directory .ignore files
+#  5.**/jobs/pipelines/  #pipeline folder follows closely with jobs not in root directory
+#  6.*.ignore  #all ignore files only
+#  7.**/jobs/**/pipelines/  #directory path contains both jobs and pipelines not root directory","Examples 1 and 2 quote the directory and file names, the remaining examples do not."
178039354,e34ab3c4f683be8fe7b399656945e39e7c970496,.copyrightignore,False,"@@ -0,0 +1,34 @@
+# *******************************************************************************
+# Copyright (c) 2018, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+#
+# *******************************************************************************
+#  THE FOLLOWING ARE EXAMPLES OF SYNTAXES copyrightCheck SUPPORTS:
+#  1.**/jobs/**  # path contains ""jobs"" folder, but not root directory
+#  2./doc  #root root level directory and file named ""doc""
+#  3./debugtools/**/*.ignore  # all .ignore file in the root directory debugtools
+#  4./*.ignore #all root directory .ignore files
+#  5.**/jobs/pipelines/  #pipeline folder follows closely with jobs not in root directory
+#  6.*.ignore  #all ignore files only
+#  7.**/jobs/**/pipelines/  #directory path contains both jobs and pipelines not root directory
+#  8.*job*  # all things that contains characters in between stars
+# *******************************************************************************/
+
+.copyrightignore",Why ignore .copyrightignore? It has a copyright.
178780893,e34ab3c4f683be8fe7b399656945e39e7c970496,.copyrightignore,True,"@@ -0,0 +1,34 @@
+# *******************************************************************************
+# Copyright (c) 2018, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+#
+# *******************************************************************************
+#  THE FOLLOWING ARE EXAMPLES OF SYNTAXES copyrightCheck SUPPORTS:",The .copyrightignore file is used by the copyrightCheck so that statement is correct.
178782149,e34ab3c4f683be8fe7b399656945e39e7c970496,.copyrightignore,True,"@@ -0,0 +1,34 @@
+# *******************************************************************************
+# Copyright (c) 2018, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+#
+# *******************************************************************************
+#  THE FOLLOWING ARE EXAMPLES OF SYNTAXES copyrightCheck SUPPORTS:
+#  1.**/jobs/**  # path contains ""jobs"" folder, but not root directory
+#  2./doc  #root root level directory and file named ""doc""",Removed 2nd root
178782722,e34ab3c4f683be8fe7b399656945e39e7c970496,.copyrightignore,True,"@@ -0,0 +1,34 @@
+# *******************************************************************************
+# Copyright (c) 2018, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+#
+# *******************************************************************************
+#  THE FOLLOWING ARE EXAMPLES OF SYNTAXES copyrightCheck SUPPORTS:
+#  1.**/jobs/**  # path contains ""jobs"" folder, but not root directory
+#  2./doc  #root root level directory and file named ""doc""
+#  3./debugtools/**/*.ignore  # all .ignore file in the root directory debugtools
+#  4./*.ignore #all root directory .ignore files
+#  5.**/jobs/pipelines/  #pipeline folder follows closely with jobs not in root directory",Updated to use `pipelines`
178783090,e34ab3c4f683be8fe7b399656945e39e7c970496,.copyrightignore,True,"@@ -0,0 +1,34 @@
+# *******************************************************************************
+# Copyright (c) 2018, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+#
+# *******************************************************************************
+#  THE FOLLOWING ARE EXAMPLES OF SYNTAXES copyrightCheck SUPPORTS:
+#  1.**/jobs/**  # path contains ""jobs"" folder, but not root directory
+#  2./doc  #root root level directory and file named ""doc""
+#  3./debugtools/**/*.ignore  # all .ignore file in the root directory debugtools
+#  4./*.ignore #all root directory .ignore files
+#  5.**/jobs/pipelines/  #pipeline folder follows closely with jobs not in root directory
+#  6.*.ignore  #all ignore files only",Updated to specify `.ignore`
178784514,e34ab3c4f683be8fe7b399656945e39e7c970496,.copyrightignore,True,"@@ -0,0 +1,34 @@
+# *******************************************************************************
+# Copyright (c) 2018, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+#
+# *******************************************************************************
+#  THE FOLLOWING ARE EXAMPLES OF SYNTAXES copyrightCheck SUPPORTS:
+#  1.**/jobs/**  # path contains ""jobs"" folder, but not root directory
+#  2./doc  #root root level directory and file named ""doc""
+#  3./debugtools/**/*.ignore  # all .ignore file in the root directory debugtools
+#  4./*.ignore #all root directory .ignore files
+#  5.**/jobs/pipelines/  #pipeline folder follows closely with jobs not in root directory
+#  6.*.ignore  #all ignore files only
+#  7.**/jobs/**/pipelines/  #directory path contains both jobs and pipelines not root directory
+#  8.*job*  # all things that contains characters in between stars
+# *******************************************************************************/
+
+.copyrightignore","OK, will remove the `.copyrightignore` file, but this then leaves the file empty other than the comments. Do you have any files / paths that should be added to ignore."
178877925,e34ab3c4f683be8fe7b399656945e39e7c970496,.copyrightignore,False,"@@ -0,0 +1,34 @@
+# *******************************************************************************
+# Copyright (c) 2018, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+#
+# *******************************************************************************
+#  THE FOLLOWING ARE EXAMPLES OF SYNTAXES copyrightCheck SUPPORTS:
+#  1.**/jobs/**  # path contains ""jobs"" folder, but not root directory
+#  2./doc  #root root level directory and file named ""doc""
+#  3./debugtools/**/*.ignore  # all .ignore file in the root directory debugtools
+#  4./*.ignore #all root directory .ignore files
+#  5.**/jobs/pipelines/  #pipeline folder follows closely with jobs not in root directory
+#  6.*.ignore  #all ignore files only
+#  7.**/jobs/**/pipelines/  #directory path contains both jobs and pipelines not root directory
+#  8.*job*  # all things that contains characters in between stars
+# *******************************************************************************/
+
+.copyrightignore","> Do you have any files / paths that should be added to ignore.

I believe so, any file that doesn't already have a copyright. I could write/run a little code later to produce a list."
178898004,e34ab3c4f683be8fe7b399656945e39e7c970496,.copyrightignore,False,"@@ -0,0 +1,34 @@
+# *******************************************************************************
+# Copyright (c) 2018, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+#
+# *******************************************************************************
+#  THE FOLLOWING ARE EXAMPLES OF SYNTAXES copyrightCheck SUPPORTS:
+#  1.**/jobs/**  # path contains ""jobs"" folder, but not root directory
+#  2./doc  #root root level directory and file named ""doc""
+#  3./debugtools/**/*.ignore  # all .ignore file in the root directory debugtools
+#  4./*.ignore #all root directory .ignore files
+#  5.**/jobs/pipelines/  #pipeline folder follows closely with jobs not in root directory
+#  6.*.ignore  #all ignore files only
+#  7.**/jobs/**/pipelines/  #directory path contains both jobs and pipelines not root directory
+#  8.*job*  # all things that contains characters in between stars
+# *******************************************************************************/
+
+.copyrightignore",I'm fine with an initially blank file. Pete or others can add to it in the future but at least the template is there with instructions.
179050779,e34ab3c4f683be8fe7b399656945e39e7c970496,.copyrightignore,False,"@@ -0,0 +1,34 @@
+# *******************************************************************************
+# Copyright (c) 2018, 2018 IBM Corp. and others
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+# *******************************************************************************/
+#
+# *******************************************************************************
+#  THE FOLLOWING ARE EXAMPLES OF SYNTAXES copyrightCheck SUPPORTS:
+#  1.**/jobs/**  # path contains ""jobs"" folder, but not root directory
+#  2./doc  #root root level directory and file named ""doc""
+#  3./debugtools/**/*.ignore  # all .ignore file in the root directory debugtools
+#  4./*.ignore #all root directory .ignore files
+#  5.**/jobs/pipelines/  #pipeline folder follows closely with jobs not in root directory
+#  6.*.ignore  #all ignore files only
+#  7.**/jobs/**/pipelines/  #directory path contains both jobs and pipelines not root directory
+#  8.*job*  # all things that contains characters in between stars
+# *******************************************************************************/
+
+.copyrightignore","I found 389 OpenJ9 files without a copyright, but since these files tend not to be modified, I don't think there is any rush to add ignores for any of them. I'm happy to deliver a blank file in this PR and modify it later."
112110384,9d0160901becfde6defa3fc5dcc79bf900575c57,.gitattributes,False,"@@ -0,0 +1,26 @@
+# This .gitattributes file will cause all text files EXCEPT for
+# *.java, *.xml, *.properties, git's .gitattributes and .gitignore
+# files to be encoded as EBCDIC.
+# Selected binary files will not be translated at all.
+
+# The default for text files
+* git-encoding=iso8859-1 working-tree-encoding=ibm-1047",This isn't reasonable: it will break all other platforms.
112204322,9d0160901becfde6defa3fc5dcc79bf900575c57,.gitattributes,True,"@@ -0,0 +1,26 @@
+# This .gitattributes file will cause all text files EXCEPT for
+# *.java, *.xml, *.properties, git's .gitattributes and .gitignore
+# files to be encoded as EBCDIC.
+# Selected binary files will not be translated at all.
+
+# The default for text files
+* git-encoding=iso8859-1 working-tree-encoding=ibm-1047",I don't think this is an issue. As far as I am aware the git-encoding is only recognised and used by the version of git that is available from rocket software. The tests I have done on other platforms as well as the CI job that was run against this PR (on a Linux machine) all worked successfully.
114551848,9d0160901becfde6defa3fc5dcc79bf900575c57,.gitattributes,False,"@@ -0,0 +1,26 @@
+# This .gitattributes file will cause all text files EXCEPT for
+# *.java, *.xml, *.properties, git's .gitattributes and .gitignore
+# files to be encoded as EBCDIC.
+# Selected binary files will not be translated at all.
+
+# The default for text files
+* git-encoding=iso8859-1 working-tree-encoding=ibm-1047",I read some more about git attributes: it seems you're right that unknown attributes will just be ignored.
114551848,9d0160901becfde6defa3fc5dcc79bf900575c57,.gitattributes,False,"@@ -0,0 +1,46 @@
+# Copyright (c) 2000, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+
+# This .gitattributes file will cause all text files EXCEPT for
+# *.java, *.xml, *.properties, git's .gitattributes and .gitignore
+# files to be encoded as EBCDIC.
+# Selected binary files will not be translated at all.
+
+# The default for text files
+* git-encoding=iso8859-1 working-tree-encoding=ibm-1047
+
+# Specific types of files remain as ASCII
+*.xml git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.dtd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.xsd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+buildspecs/* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.h* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.c* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+sourcetools/objectmodel/schema/*.xsd git-encoding=iso8859-1 working-tree-encoding=ibm-1047",This is redundant - it's just the defauls set above.
114551848,9d0160901becfde6defa3fc5dcc79bf900575c57,.gitattributes,False,"@@ -0,0 +1,46 @@
+# Copyright (c) 2000, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+
+# This .gitattributes file will cause all text files EXCEPT for
+# *.java, *.xml, *.properties, git's .gitattributes and .gitignore
+# files to be encoded as EBCDIC.
+# Selected binary files will not be translated at all.
+
+# The default for text files
+* git-encoding=iso8859-1 working-tree-encoding=ibm-1047
+
+# Specific types of files remain as ASCII
+*.xml git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.dtd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.xsd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+buildspecs/* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.h* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.c* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+sourcetools/objectmodel/schema/*.xsd git-encoding=iso8859-1 working-tree-encoding=ibm-1047
+
+# git's files (which MUST be ASCII)
+.gitattributes git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+.gitignore git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+
+# Binary files
+*.jpg git-encoding=BINARY working-tree-encoding=BINARY
+*.png git-encoding=BINARY working-tree-encoding=BINARY
+*.gif git-encoding=BINARY working-tree-encoding=BINARY
+*.zip git-encoding=BINARY working-tree-encoding=BINARY",All text files should have a final newline ('Y' should *not* be the last character).
114817997,9d0160901becfde6defa3fc5dcc79bf900575c57,.gitattributes,True,"@@ -0,0 +1,46 @@
+# Copyright (c) 2000, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+
+# This .gitattributes file will cause all text files EXCEPT for
+# *.java, *.xml, *.properties, git's .gitattributes and .gitignore
+# files to be encoded as EBCDIC.
+# Selected binary files will not be translated at all.
+
+# The default for text files
+* git-encoding=iso8859-1 working-tree-encoding=ibm-1047
+
+# Specific types of files remain as ASCII
+*.xml git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.dtd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.xsd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+buildspecs/* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.h* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.c* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+sourcetools/objectmodel/schema/*.xsd git-encoding=iso8859-1 working-tree-encoding=ibm-1047","OK, will try without these.
Not sure why these were added if the default should have set them correctly.
It may be that we just wanted to ensure these were encoded correctly. "
114833946,9d0160901becfde6defa3fc5dcc79bf900575c57,.gitattributes,False,"@@ -0,0 +1,46 @@
+# Copyright (c) 2000, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+
+# This .gitattributes file will cause all text files EXCEPT for
+# *.java, *.xml, *.properties, git's .gitattributes and .gitignore
+# files to be encoded as EBCDIC.
+# Selected binary files will not be translated at all.
+
+# The default for text files
+* git-encoding=iso8859-1 working-tree-encoding=ibm-1047
+
+# Specific types of files remain as ASCII
+*.xml git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.dtd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.xsd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+buildspecs/* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.h* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.c* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+sourcetools/objectmodel/schema/*.xsd git-encoding=iso8859-1 working-tree-encoding=ibm-1047","Why do `runtime/gc_glue_java/*.c*` and `runtime/gc_glue_java/*.h*` need special treatment, but not other C/C++ source files? What, if any, changes will be required for OMR?"
122356908,9d0160901becfde6defa3fc5dcc79bf900575c57,.gitattributes,False,"@@ -0,0 +1,46 @@
+# Copyright (c) 2000, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+
+# This .gitattributes file will cause all text files EXCEPT for
+# *.java, *.xml, *.properties, git's .gitattributes and .gitignore
+# files to be encoded as EBCDIC.
+# Selected binary files will not be translated at all.
+
+# The default for text files
+* git-encoding=iso8859-1 working-tree-encoding=ibm-1047
+
+# Specific types of files remain as ASCII
+*.xml git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.dtd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.xsd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+buildspecs/* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.h* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.c* git-encoding=iso8859-1 working-tree-encoding=iso8859-1","Why do .cpp/.hpp files in runtime/gc_glue_java need special treatment? Can they not be subject to the default which applies to the other C/C++ source files throughout the rest of the source tree? If there's a good explanation, please add it as a comment in this file; otherwise please remove these redundant lines."
122356908,9d0160901becfde6defa3fc5dcc79bf900575c57,.gitattributes,False,"@@ -0,0 +1,46 @@
+# Copyright (c) 2000, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+
+# This .gitattributes file will cause all text files EXCEPT for
+# *.java, *.xml, *.properties, git's .gitattributes and .gitignore
+# files to be encoded as EBCDIC.
+# Selected binary files will not be translated at all.
+
+# The default for text files
+* git-encoding=iso8859-1 working-tree-encoding=ibm-1047
+
+# Specific types of files remain as ASCII
+*.xml git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.dtd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.xsd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+buildspecs/* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.h* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.c* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+#sourcetools/objectmodel/schema/*.xsd git-encoding=iso8859-1 working-tree-encoding=ibm-1047",Please remove this comment.
122356908,9d0160901becfde6defa3fc5dcc79bf900575c57,.gitattributes,False,"@@ -0,0 +1,46 @@
+# Copyright (c) 2000, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+
+# This .gitattributes file will cause all text files EXCEPT for
+# *.java, *.xml, *.properties, git's .gitattributes and .gitignore
+# files to be encoded as EBCDIC.
+# Selected binary files will not be translated at all.
+
+# The default for text files
+* git-encoding=iso8859-1 working-tree-encoding=ibm-1047
+
+# Specific types of files remain as ASCII
+*.xml git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.dtd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.xsd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+buildspecs/* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.h* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.c* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+#sourcetools/objectmodel/schema/*.xsd git-encoding=iso8859-1 working-tree-encoding=ibm-1047
+
+# git's files (which MUST be ASCII)
+.gitattributes git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+.gitignore git-encoding=iso8859-1 working-tree-encoding=iso8859-1",Can these not also be subject to the default text file rules above?
122452429,9d0160901becfde6defa3fc5dcc79bf900575c57,.gitattributes,True,"@@ -0,0 +1,46 @@
+# Copyright (c) 2000, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+
+# This .gitattributes file will cause all text files EXCEPT for
+# *.java, *.xml, *.properties, git's .gitattributes and .gitignore
+# files to be encoded as EBCDIC.
+# Selected binary files will not be translated at all.
+
+# The default for text files
+* git-encoding=iso8859-1 working-tree-encoding=ibm-1047
+
+# Specific types of files remain as ASCII
+*.xml git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.dtd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.xsd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+buildspecs/* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.h* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.c* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+#sourcetools/objectmodel/schema/*.xsd git-encoding=iso8859-1 working-tree-encoding=ibm-1047
+
+# git's files (which MUST be ASCII)
+.gitattributes git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+.gitignore git-encoding=iso8859-1 working-tree-encoding=iso8859-1",I don't think so. These are set in the default .gitattributes file that we initially got.
122452494,9d0160901becfde6defa3fc5dcc79bf900575c57,.gitattributes,True,"@@ -0,0 +1,46 @@
+# Copyright (c) 2000, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+
+# This .gitattributes file will cause all text files EXCEPT for
+# *.java, *.xml, *.properties, git's .gitattributes and .gitignore
+# files to be encoded as EBCDIC.
+# Selected binary files will not be translated at all.
+
+# The default for text files
+* git-encoding=iso8859-1 working-tree-encoding=ibm-1047
+
+# Specific types of files remain as ASCII
+*.xml git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.dtd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.xsd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+buildspecs/* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.h* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.c* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+#sourcetools/objectmodel/schema/*.xsd git-encoding=iso8859-1 working-tree-encoding=ibm-1047","OK, will do."
122452990,9d0160901becfde6defa3fc5dcc79bf900575c57,.gitattributes,True,"@@ -0,0 +1,46 @@
+# Copyright (c) 2000, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+
+# This .gitattributes file will cause all text files EXCEPT for
+# *.java, *.xml, *.properties, git's .gitattributes and .gitignore
+# files to be encoded as EBCDIC.
+# Selected binary files will not be translated at all.
+
+# The default for text files
+* git-encoding=iso8859-1 working-tree-encoding=ibm-1047
+
+# Specific types of files remain as ASCII
+*.xml git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.dtd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+*.xsd git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+buildspecs/* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.h* git-encoding=iso8859-1 working-tree-encoding=iso8859-1
+runtime/gc_glue_java/*.c* git-encoding=iso8859-1 working-tree-encoding=iso8859-1","There must have been a reason these were added. 
Will remove and see whether it still works as expected."
122575480,9d0160901becfde6defa3fc5dcc79bf900575c57,.gitattributes,False,"@@ -0,0 +1,43 @@
+# Copyright (c) 2000, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+
+# This .gitattributes file will cause all text files EXCEPT for
+# *.xml, *.dtd, *.xsd, and others (see below) as well as","When you get to a final set of encoding mappings, could you please update this comment so it is accurate?"
122626444,9d0160901becfde6defa3fc5dcc79bf900575c57,.gitattributes,True,"@@ -0,0 +1,43 @@
+# Copyright (c) 2000, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+
+# This .gitattributes file will cause all text files EXCEPT for
+# *.xml, *.dtd, *.xsd, and others (see below) as well as","Have changed the comment to be generic.  
There is no point listing all the files that are changed as they are specifically listed in the file. 
Hopefully this is the last change that you require and this PR can be OK'ed and Merged."
210327879,9a620aba81f206e5c50482f020a5f9330e95ac00,.github/ISSUE_TEMPLATE/test-suite-failure.md,False,"@@ -0,0 +1,9 @@
+---
+name: OpenJ9 test suite failure
+about: A failing functionality, system, or JTReg test
+
+---
+
+Public link to the failing test. If the link is internal, instead include which test suite (functionality, system, etc), platform, JDK version, build level.
+
+Output from the failure, including test name.","We may want to wrap some of these in `<!---` and `-->` so they're displayed as comments in case the issue author forgets to delete them. We can also introduce some sections. For example:

---
### Failure link
<!--- Replace this with a link to the failing test case. If the link is internal, instead include which test suite (functionality, system, etc), platform, JDK version, build level. -->

### Output from the failure
<!--- Place the output from the failure, including test name withing the triple back-ticks below -->
```
```

"
212071370,9a620aba81f206e5c50482f020a5f9330e95ac00,.github/ISSUE_TEMPLATE/test-suite-failure.md,True,"@@ -0,0 +1,9 @@
+---
+name: OpenJ9 test suite failure
+about: A failing functionality, system, or JTReg test
+
+---
+
+Public link to the failing test. If the link is internal, instead include which test suite (functionality, system, etc), platform, JDK version, build level.
+
+Output from the failure, including test name.",There is some risk that a user would put text inside the comments. I've added sections and introduced additional formatting.
195102137,8b6343acf6a0829c78ef1201696eb42a7e295180,.gitignore,False,"@@ -1,4 +1,4 @@
-# Copyright (c) 2000, 2018 IBM Corp. and others
+# Copyright (c) 2000, 2019 IBM Corp. and others
 #",can you please revert the changes in this file
243860204,35dad29d45a8dd3d01514fd827738e6b90866dcc,.gitignore,False,"@@ -43,3 +43,4 @@ com.ibm.jvmti.tests
 # Default test directory (BUILD_ROOT)
 /jvmtest/
 /build/
+.vscode/","Is this directory normally at the root of the working copy? If so, it should be `/.vscode/` here. Please also add a comment so it's clear it's not related to tests."
244955126,35dad29d45a8dd3d01514fd827738e6b90866dcc,.gitignore,True,"@@ -43,3 +43,4 @@ com.ibm.jvmti.tests
 # Default test directory (BUILD_ROOT)
 /jvmtest/
 /build/
+.vscode/",updated... the tool automatically added it without the `/` which I would have preferred to keep but convention in this file says to add it so I did
63426489,82d4f8b9d0412ac998164025275446f78ac24762,.travis.yml,False,"@@ -0,0 +1,83 @@
+###############################################################################
+# Copyright (c) 2016, 2017 IBM Corp. and others
+# 
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#      
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#    
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+# 
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
+###############################################################################
+os:
+  - linux
+language: cpp
+sudo: false
+#cache: ccache # https://docs.travis-ci.com/user/caching/
+dist: trusty
+addons:
+  apt:
+    packages:
+      - autoconf 
+      - ca-certificates 
+      - ccache 
+      - cpio 
+      - file 
+      - g++-4.8 
+      - gcc-4.8 
+      - git 
+      - git-core 
+      - libasound2-dev 
+      - libcups2-dev 
+      - libelf-dev 
+      - libfreetype6-dev 
+      - libnuma-dev 
+      - libx11-dev 
+      - libxext-dev 
+      - libxrender-dev 
+      - libxt-dev 
+      - libxtst-dev 
+      - make 
+      - openjdk-8-jdk 
+      - pkg-config 
+      - realpath 
+      - ssh 
+      - unzip 
+      - wget 
+      - zip 
+before_install:
+  - jdk_switcher use oraclejdk8
+env:
+  global:
+before_script:
+        #  - ccache -s -z
+  - wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz
+  - tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2
+  - cd ..
+  - git clone https://github.com/ibmruntimes/openj9-openjdk-jdk9.git
+script:
+  # Clear this option so it doesn't interfere with configure detecting the bootjdk
+  - unset _JAVA_OPTIONS
+  # Point the get_sources script at the OpenJ9 repo that's already been cloned to disk.  
+  # Results in a copy of the source (disk space =( ) but no new network activity so overall a win. 
+  - cd openj9-openjdk-jdk9 && bash ./get_source.sh -openj9-repo=$TRAVIS_BUILD_DIR -openj9-branch=$TRAVIS_BRANCH -openj9-sha=$TRAVIS_COMMIT
+  # Based on https://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/ travis container builds
+  # have 2 cores and 4 gigs of memory.  Attempt to double provision the number of cores for the make...
+  # Limit number of jobs to work around g++ internal compiler error
+  - export UMA_WINDOWS_PARRALLEL_HACK=""-j4""",Is the hack actually misspelled? (Two `R`s)
63429838,82d4f8b9d0412ac998164025275446f78ac24762,.travis.yml,True,"@@ -0,0 +1,83 @@
+###############################################################################
+# Copyright (c) 2016, 2017 IBM Corp. and others
+# 
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#      
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#    
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+# 
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
+###############################################################################
+os:
+  - linux
+language: cpp
+sudo: false
+#cache: ccache # https://docs.travis-ci.com/user/caching/
+dist: trusty
+addons:
+  apt:
+    packages:
+      - autoconf 
+      - ca-certificates 
+      - ccache 
+      - cpio 
+      - file 
+      - g++-4.8 
+      - gcc-4.8 
+      - git 
+      - git-core 
+      - libasound2-dev 
+      - libcups2-dev 
+      - libelf-dev 
+      - libfreetype6-dev 
+      - libnuma-dev 
+      - libx11-dev 
+      - libxext-dev 
+      - libxrender-dev 
+      - libxt-dev 
+      - libxtst-dev 
+      - make 
+      - openjdk-8-jdk 
+      - pkg-config 
+      - realpath 
+      - ssh 
+      - unzip 
+      - wget 
+      - zip 
+before_install:
+  - jdk_switcher use oraclejdk8
+env:
+  global:
+before_script:
+        #  - ccache -s -z
+  - wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz
+  - tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2
+  - cd ..
+  - git clone https://github.com/ibmruntimes/openj9-openjdk-jdk9.git
+script:
+  # Clear this option so it doesn't interfere with configure detecting the bootjdk
+  - unset _JAVA_OPTIONS
+  # Point the get_sources script at the OpenJ9 repo that's already been cloned to disk.  
+  # Results in a copy of the source (disk space =( ) but no new network activity so overall a win. 
+  - cd openj9-openjdk-jdk9 && bash ./get_source.sh -openj9-repo=$TRAVIS_BUILD_DIR -openj9-branch=$TRAVIS_BRANCH -openj9-sha=$TRAVIS_COMMIT
+  # Based on https://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/ travis container builds
+  # have 2 cores and 4 gigs of memory.  Attempt to double provision the number of cores for the make...
+  # Limit number of jobs to work around g++ internal compiler error
+  - export UMA_WINDOWS_PARRALLEL_HACK=""-j4""","Sadly, that matches what's in the tr.source makefiles: https://github.com/eclipse/openj9/blob/master/runtime/tr.source/makefile.ftl 

(edited to add: and in the rest of our code... see https://github.com/eclipse/openj9/search?utf8=✓&q=UMA_WINDOWS_PARRALLEL_HACK&type=)"
63430482,82d4f8b9d0412ac998164025275446f78ac24762,.travis.yml,False,"@@ -0,0 +1,83 @@
+###############################################################################
+# Copyright (c) 2016, 2017 IBM Corp. and others
+# 
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#      
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#    
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+# 
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
+###############################################################################
+os:
+  - linux
+language: cpp
+sudo: false
+#cache: ccache # https://docs.travis-ci.com/user/caching/
+dist: trusty
+addons:
+  apt:
+    packages:
+      - autoconf 
+      - ca-certificates 
+      - ccache 
+      - cpio 
+      - file 
+      - g++-4.8 
+      - gcc-4.8 
+      - git 
+      - git-core 
+      - libasound2-dev 
+      - libcups2-dev 
+      - libelf-dev 
+      - libfreetype6-dev 
+      - libnuma-dev 
+      - libx11-dev 
+      - libxext-dev 
+      - libxrender-dev 
+      - libxt-dev 
+      - libxtst-dev 
+      - make 
+      - openjdk-8-jdk 
+      - pkg-config 
+      - realpath 
+      - ssh 
+      - unzip 
+      - wget 
+      - zip 
+before_install:
+  - jdk_switcher use oraclejdk8
+env:
+  global:
+before_script:
+        #  - ccache -s -z
+  - wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz
+  - tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2
+  - cd ..
+  - git clone https://github.com/ibmruntimes/openj9-openjdk-jdk9.git
+script:
+  # Clear this option so it doesn't interfere with configure detecting the bootjdk
+  - unset _JAVA_OPTIONS
+  # Point the get_sources script at the OpenJ9 repo that's already been cloned to disk.  
+  # Results in a copy of the source (disk space =( ) but no new network activity so overall a win. 
+  - cd openj9-openjdk-jdk9 && bash ./get_source.sh -openj9-repo=$TRAVIS_BUILD_DIR -openj9-branch=$TRAVIS_BRANCH -openj9-sha=$TRAVIS_COMMIT
+  # Based on https://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/ travis container builds
+  # have 2 cores and 4 gigs of memory.  Attempt to double provision the number of cores for the make...
+  # Limit number of jobs to work around g++ internal compiler error
+  - export UMA_WINDOWS_PARRALLEL_HACK=""-j4""",![facepalm](https://media.giphy.com/media/3og0INyCmHlNylks9O/giphy.gif)
67490780,b733c4a934c58303fd06b7ccebf7b9053df021fa,.travis.yml,False,"@@ -28,57 +28,61 @@ dist: trusty
 addons:
   apt:
     packages:
-      - autoconf 
-      - ca-certificates 
-      - ccache 
-      - cpio 
-      - file 
-      - g++-4.8 
-      - gcc-4.8 
-      - git 
-      - git-core 
-      - libasound2-dev 
-      - libcups2-dev 
-      - libelf-dev 
-      - libfreetype6-dev 
-      - libnuma-dev 
-      - libx11-dev 
-      - libxext-dev 
-      - libxrender-dev 
-      - libxt-dev 
-      - libxtst-dev 
-      - make 
-      - openjdk-8-jdk 
-      - pkg-config 
-      - realpath 
-      - ssh 
-      - unzip 
-      - wget 
-      - zip 
+      - autoconf
+      - ca-certificates
+      - ccache
+      - cpio
+      - file
+      - g++-4.8
+      - gcc-4.8
+      - git
+      - git-core
+      - libasound2-dev
+      - libcups2-dev
+      - libelf-dev
+      - libfreetype6-dev
+      - libnuma-dev
+      - libx11-dev
+      - libxext-dev
+      - libxrender-dev
+      - libxt-dev
+      - libxtst-dev
+      - make
+      - openjdk-8-jdk
+      - pkg-config
+      - realpath
+      - ssh
+      - unzip
+      - wget
+      - zip
 before_install:
   - jdk_switcher use oraclejdk8
 env:
   global:
 before_script:
-        #  - ccache -s -z
+  # - ccache -s -z
+  # Exit immediately if any unexpected error occurs.
+  - set -e
   - wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz
   - tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2
   - cd ..
-  # Shallow clone of the openj9-openjdk-jdk9 repo to speed up clone / reduce server load
+  # Shallow clone of the openj9-openjdk-jdk9 repo to speed up clone / reduce server load.
   - git clone --depth 1 https://github.com/ibmruntimes/openj9-openjdk-jdk9.git
 script:
-  # Clear this option so it doesn't interfere with configure detecting the bootjdk
+  # Clear this option so it doesn't interfere with configure detecting the bootjdk.
   - unset _JAVA_OPTIONS
-  # Point the get_sources script at the OpenJ9 repo that's already been cloned to disk.  
-  # Results in a copy of the source (disk space =( ) but no new network activity so overall a win. 
-  - cd openj9-openjdk-jdk9 && bash ./get_source.sh -openj9-repo=$TRAVIS_BUILD_DIR -openj9-branch=$TRAVIS_BRANCH -openj9-sha=$TRAVIS_COMMIT
-  # Based on https://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/ travis container builds
-  # have 2 cores and 4 gigs of memory.  Attempt to double provision the number of cores for the make...
-  # Limit number of jobs to work around g++ internal compiler error
-  - export UMA_WINDOWS_PARRALLEL_HACK=""-j4""
-  - bash ./configure --with-freemarker-jar=$TRAVIS_BUILD_DIR/freemarker.jar --with-jobs=4 --with-num-cores=4
+  # Exit immediately if any unexpected error occurs.
+  - set -e
+  # Point the get_sources script at the OpenJ9 repo that's already been cloned to disk.
+  # Results in a copy of the source (disk space =( ) but no new network activity so overall a win.
+  - cd openj9-openjdk-jdk9 && bash get_source.sh -openj9-repo=$TRAVIS_BUILD_DIR -openj9-branch=$TRAVIS_BRANCH -openj9-sha=$TRAVIS_COMMIT",We should stop specifying `-openj9-branch` since we really only care about `-openj9-sha`
67502472,b733c4a934c58303fd06b7ccebf7b9053df021fa,.travis.yml,False,"@@ -28,57 +28,61 @@ dist: trusty
 addons:
   apt:
     packages:
-      - autoconf 
-      - ca-certificates 
-      - ccache 
-      - cpio 
-      - file 
-      - g++-4.8 
-      - gcc-4.8 
-      - git 
-      - git-core 
-      - libasound2-dev 
-      - libcups2-dev 
-      - libelf-dev 
-      - libfreetype6-dev 
-      - libnuma-dev 
-      - libx11-dev 
-      - libxext-dev 
-      - libxrender-dev 
-      - libxt-dev 
-      - libxtst-dev 
-      - make 
-      - openjdk-8-jdk 
-      - pkg-config 
-      - realpath 
-      - ssh 
-      - unzip 
-      - wget 
-      - zip 
+      - autoconf
+      - ca-certificates
+      - ccache
+      - cpio
+      - file
+      - g++-4.8
+      - gcc-4.8
+      - git
+      - git-core
+      - libasound2-dev
+      - libcups2-dev
+      - libelf-dev
+      - libfreetype6-dev
+      - libnuma-dev
+      - libx11-dev
+      - libxext-dev
+      - libxrender-dev
+      - libxt-dev
+      - libxtst-dev
+      - make
+      - openjdk-8-jdk
+      - pkg-config
+      - realpath
+      - ssh
+      - unzip
+      - wget
+      - zip
 before_install:
   - jdk_switcher use oraclejdk8
 env:
   global:
 before_script:
-        #  - ccache -s -z
+  # - ccache -s -z
+  # Exit immediately if any unexpected error occurs.
+  - set -e
   - wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz
   - tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2
   - cd ..
-  # Shallow clone of the openj9-openjdk-jdk9 repo to speed up clone / reduce server load
+  # Shallow clone of the openj9-openjdk-jdk9 repo to speed up clone / reduce server load.
   - git clone --depth 1 https://github.com/ibmruntimes/openj9-openjdk-jdk9.git
 script:
-  # Clear this option so it doesn't interfere with configure detecting the bootjdk
+  # Clear this option so it doesn't interfere with configure detecting the bootjdk.
   - unset _JAVA_OPTIONS
-  # Point the get_sources script at the OpenJ9 repo that's already been cloned to disk.  
-  # Results in a copy of the source (disk space =( ) but no new network activity so overall a win. 
-  - cd openj9-openjdk-jdk9 && bash ./get_source.sh -openj9-repo=$TRAVIS_BUILD_DIR -openj9-branch=$TRAVIS_BRANCH -openj9-sha=$TRAVIS_COMMIT
-  # Based on https://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/ travis container builds
-  # have 2 cores and 4 gigs of memory.  Attempt to double provision the number of cores for the make...
-  # Limit number of jobs to work around g++ internal compiler error
-  - export UMA_WINDOWS_PARRALLEL_HACK=""-j4""
-  - bash ./configure --with-freemarker-jar=$TRAVIS_BUILD_DIR/freemarker.jar --with-jobs=4 --with-num-cores=4
+  # Exit immediately if any unexpected error occurs.
+  - set -e
+  # Point the get_sources script at the OpenJ9 repo that's already been cloned to disk.
+  # Results in a copy of the source (disk space =( ) but no new network activity so overall a win.
+  - cd openj9-openjdk-jdk9 && bash get_source.sh -openj9-repo=$TRAVIS_BUILD_DIR -openj9-branch=$TRAVIS_BRANCH -openj9-sha=$TRAVIS_COMMIT","I suppose it doesn't really matter. `$TRAVIS_BRANCH=master` and the default is `master` so it doesn't really change anything. If at some point the get_source script changes its default, we would probably want `TRAVIS_BRANCH` instead, although it doesn't really matter because he checkout the SHA anyways."
102506365,8bf87af8ad477dfbbca6b85d54970f3f20742c05,.travis.yml,False,"@@ -63,8 +63,7 @@ before_script:
   # - ccache -s -z
   # Exit immediately if any unexpected error occurs.
   - set -e
-  - wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz
-  - tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2
+  - wget https://ci.eclipse.org/openj9/userContent/freemarker.jar",Any reason to remove the version information from the file name?
102506844,8bf87af8ad477dfbbca6b85d54970f3f20742c05,.travis.yml,True,"@@ -63,8 +63,7 @@ before_script:
   # - ccache -s -z
   # Exit immediately if any unexpected error occurs.
   - set -e
-  - wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz
-  - tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2
+  - wget https://ci.eclipse.org/openj9/userContent/freemarker.jar","Not really, and I was just thinking of putting that back in to make it obvious.  You're comment seals it."
158772386,a47e562436e806eb2b6a0987267d9ce98982f87c,.travis.yml,False,"@@ -66,42 +66,9 @@ addons:
       - llvm-3.8-dev
 before_install:
   - jdk_switcher use oraclejdk8
-before_script:
-  - ccache -s -z","The ccache commands were removed, is this intentional?"
158772386,a47e562436e806eb2b6a0987267d9ce98982f87c,.travis.yml,False,"@@ -66,42 +66,9 @@ addons:
       - llvm-3.8-dev
 before_install:
   - jdk_switcher use oraclejdk8
-before_script:
-  - ccache -s -z
-  # Exit immediately if any unexpected error occurs.
-  - set -e
-  - if [ ! `wget https://ci.eclipse.org/openj9/userContent/freemarker-2.3.8.jar -O freemarker.jar` ]; then
-      wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz;
-      tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2;
-    fi
-  - cd ..
-  # Shallow clone of the openj9-openjdk-jdk9 repo to speed up clone / reduce server load.
-  - git clone --depth 1 https://github.com/ibmruntimes/openj9-openjdk-jdk9.git
 script:
-  # Clear this option so it doesn't interfere with configure detecting the bootjdk.",This comment was lost.
158772386,a47e562436e806eb2b6a0987267d9ce98982f87c,.travis.yml,False,"@@ -66,42 +66,9 @@ addons:
       - llvm-3.8-dev
 before_install:
   - jdk_switcher use oraclejdk8
-before_script:
-  - ccache -s -z
-  # Exit immediately if any unexpected error occurs.
-  - set -e
-  - if [ ! `wget https://ci.eclipse.org/openj9/userContent/freemarker-2.3.8.jar -O freemarker.jar` ]; then
-      wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz;
-      tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2;
-    fi
-  - cd ..
-  # Shallow clone of the openj9-openjdk-jdk9 repo to speed up clone / reduce server load.
-  - git clone --depth 1 https://github.com/ibmruntimes/openj9-openjdk-jdk9.git
 script:
-  # Clear this option so it doesn't interfere with configure detecting the bootjdk.
-  - unset _JAVA_OPTIONS
-  # Exit immediately if any unexpected error occurs.
-  - set -e
-  # Point the get_sources script at the OpenJ9 repo that's already been cloned to disk.",This comment was lost.
160428623,a47e562436e806eb2b6a0987267d9ce98982f87c,.travis.yml,True,"@@ -66,42 +66,9 @@ addons:
       - llvm-3.8-dev
 before_install:
   - jdk_switcher use oraclejdk8
-before_script:
-  - ccache -s -z
-  # Exit immediately if any unexpected error occurs.
-  - set -e
-  - if [ ! `wget https://ci.eclipse.org/openj9/userContent/freemarker-2.3.8.jar -O freemarker.jar` ]; then
-      wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz;
-      tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2;
-    fi
-  - cd ..
-  # Shallow clone of the openj9-openjdk-jdk9 repo to speed up clone / reduce server load.
-  - git clone --depth 1 https://github.com/ibmruntimes/openj9-openjdk-jdk9.git
 script:
-  # Clear this option so it doesn't interfere with configure detecting the bootjdk.
-  - unset _JAVA_OPTIONS
-  # Exit immediately if any unexpected error occurs.
-  - set -e
-  # Point the get_sources script at the OpenJ9 repo that's already been cloned to disk.",Fixed
163494615,e020fcad8c9f6452139450f802ad7d470b6372a9,.travis.yml,False,"@@ -67,6 +67,7 @@ addons:
 before_install:
   - jdk_switcher use oraclejdk8
 before_script:
+  - ccache -M 1G",Why two ccache lines instead of 1?  Can you add a comment to explain what / why these options are being used?
163502487,e020fcad8c9f6452139450f802ad7d470b6372a9,.travis.yml,True,"@@ -67,6 +67,7 @@ addons:
 before_install:
   - jdk_switcher use oraclejdk8
 before_script:
+  - ccache -M 1G","I suppose there is no real reason for having them in separate command invocation, other than the fact that they are logically separate actions. The `-M 1G` just sets the max cache size to 1GB (the default is 512MB, and just building the vm once puts the cache usage at 517MB)"
268360159,adb0260647e14187df9a3091265ac3a445475c2e,.travis.yml,False,"@@ -51,6 +51,7 @@ addons:
       - libxtst-dev
       - make
       - nasm
+      - nvidia-cuda-dev",This change doesn't belong in this PR.
174977347,073ec783d03244781b5612da689ad3ed537e1fda,CMakeLists.txt,False,"@@ -0,0 +1,33 @@
+################################################################################
+# Copyright (c) 2018, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+################################################################################
+
+cmake_minimum_required(VERSION 3.4 FATAL_ERROR)
+
+project(openj9)
+include(FindJava)","What does `FindJava` do?  Is it something we authored?  

The root of my concern is that we want to be able to specify the Java being used to ensure it's the same bootjdk used by the rest of the build."
175422275,073ec783d03244781b5612da689ad3ed537e1fda,CMakeLists.txt,True,"@@ -0,0 +1,33 @@
+################################################################################
+# Copyright (c) 2018, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+################################################################################
+
+cmake_minimum_required(VERSION 3.4 FATAL_ERROR)
+
+project(openj9)
+include(FindJava)","It is a built in module from cmake. you can point it to a specific java by setting `JAVA_HOME`
https://cmake.org/cmake/help/v3.4/module/FindJava.html"
175963192,073ec783d03244781b5612da689ad3ed537e1fda,CMakeLists.txt,False,"@@ -0,0 +1,33 @@
+################################################################################
+# Copyright (c) 2018, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+################################################################################
+
+cmake_minimum_required(VERSION 3.4 FATAL_ERROR)
+
+project(openj9)
+include(FindJava)",I think this should use the bootjdk as configured in the extension project rather than the default for the build machine.
178023814,073ec783d03244781b5612da689ad3ed537e1fda,CMakeLists.txt,False,"@@ -0,0 +1,46 @@
+################################################################################
+# Copyright (c) 2018, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+################################################################################
+
+cmake_minimum_required(VERSION 3.4 FATAL_ERROR)
+
+project(openj9)
+
+if(NOT $ENV{BOOT_JDK} STREQUAL """")
+    set(JAVA_HOME $ENV{BOOT_JDK})
+
+    # These variables are consumed when the ""Java"" language is enabled
+    set(CMAKE_Java_COMPILER ${JAVA_HOME}/bin/javac)
+    set(CMAKE_Java_RUNTIME ${JAVA_HOME}/bin/java)
+    set(CMAKE_Java_AR ${JAVA_HOME}/bin/jar)
+
+    set(Java_JAVA_EXECUTABLE ${JAVA_HOME}/bin/java)
+else()
+    message(STATUS ""BOOT_JDK is not set, default jdk will be used"")
+    include(FindJava)",I would rather this errors out than pick a random java
179402888,073ec783d03244781b5612da689ad3ed537e1fda,CMakeLists.txt,True,"@@ -0,0 +1,46 @@
+################################################################################
+# Copyright (c) 2018, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+################################################################################
+
+cmake_minimum_required(VERSION 3.4 FATAL_ERROR)
+
+project(openj9)
+
+if(NOT $ENV{BOOT_JDK} STREQUAL """")
+    set(JAVA_HOME $ENV{BOOT_JDK})
+
+    # These variables are consumed when the ""Java"" language is enabled
+    set(CMAKE_Java_COMPILER ${JAVA_HOME}/bin/javac)
+    set(CMAKE_Java_RUNTIME ${JAVA_HOME}/bin/java)
+    set(CMAKE_Java_AR ${JAVA_HOME}/bin/jar)
+
+    set(Java_JAVA_EXECUTABLE ${JAVA_HOME}/bin/java)
+else()
+    message(STATUS ""BOOT_JDK is not set, default jdk will be used"")
+    include(FindJava)","Ultimately, this is the same behavior that we have in the [makefiles](https://github.com/eclipse/openj9/blob/01f3a1c977a8fc5b06de4b0dcc4b4745f1796e8b/runtime/buildtools.mk#L49), and in the openjdk [autoconf](https://github.com/ibmruntimes/openj9-openjdk-jdk11/blob/d42cd0d94f7e017c1b3fbcb748cfecce81e15801/make/autoconf/boot-jdk.m4#L43)"
179403982,073ec783d03244781b5612da689ad3ed537e1fda,CMakeLists.txt,False,"@@ -0,0 +1,46 @@
+################################################################################
+# Copyright (c) 2018, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+################################################################################
+
+cmake_minimum_required(VERSION 3.4 FATAL_ERROR)
+
+project(openj9)
+
+if(NOT $ENV{BOOT_JDK} STREQUAL """")
+    set(JAVA_HOME $ENV{BOOT_JDK})
+
+    # These variables are consumed when the ""Java"" language is enabled
+    set(CMAKE_Java_COMPILER ${JAVA_HOME}/bin/javac)
+    set(CMAKE_Java_RUNTIME ${JAVA_HOME}/bin/java)
+    set(CMAKE_Java_AR ${JAVA_HOME}/bin/jar)
+
+    set(Java_JAVA_EXECUTABLE ${JAVA_HOME}/bin/java)
+else()
+    message(STATUS ""BOOT_JDK is not set, default jdk will be used"")
+    include(FindJava)",This code is downstream from the openjdk autoconf.  We should never get here without having set the bootjdk
181275369,073ec783d03244781b5612da689ad3ed537e1fda,CMakeLists.txt,False,"@@ -0,0 +1,46 @@
+################################################################################
+# Copyright (c) 2018, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+################################################################################
+
+cmake_minimum_required(VERSION 3.4 FATAL_ERROR)
+
+project(openj9)
+
+if(NOT $ENV{BOOT_JDK} STREQUAL """")
+    set(JAVA_HOME $ENV{BOOT_JDK})
+
+    # These variables are consumed when the ""Java"" language is enabled
+    set(CMAKE_Java_COMPILER ${JAVA_HOME}/bin/javac)
+    set(CMAKE_Java_RUNTIME ${JAVA_HOME}/bin/java)
+    set(CMAKE_Java_AR ${JAVA_HOME}/bin/jar)
+
+    set(Java_JAVA_EXECUTABLE ${JAVA_HOME}/bin/java)
+else()
+    message(STATUS ""BOOT_JDK is not set, default jdk will be used"")
+    include(FindJava)","@dnakamura If this gets dealt with, I think it's ready to merge"
182329904,073ec783d03244781b5612da689ad3ed537e1fda,CMakeLists.txt,True,"@@ -0,0 +1,46 @@
+################################################################################
+# Copyright (c) 2018, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+################################################################################
+
+cmake_minimum_required(VERSION 3.4 FATAL_ERROR)
+
+project(openj9)
+
+if(NOT $ENV{BOOT_JDK} STREQUAL """")
+    set(JAVA_HOME $ENV{BOOT_JDK})
+
+    # These variables are consumed when the ""Java"" language is enabled
+    set(CMAKE_Java_COMPILER ${JAVA_HOME}/bin/javac)
+    set(CMAKE_Java_RUNTIME ${JAVA_HOME}/bin/java)
+    set(CMAKE_Java_AR ${JAVA_HOME}/bin/jar)
+
+    set(Java_JAVA_EXECUTABLE ${JAVA_HOME}/bin/java)
+else()
+    message(STATUS ""BOOT_JDK is not set, default jdk will be used"")
+    include(FindJava)",@DanHeidinga  How would you feel about wrapping this behavior up in a flag? ie J9VM_FORCE_JDK_SEARCH or something. I'm thinking of the case of the jit linter. To run properly it needs to generate all the various header files. The easiest way to do that is to just run cmake outside of the full openjdk build. Its not clear what the proper value of BOOT_JDK should be
182385566,073ec783d03244781b5612da689ad3ed537e1fda,CMakeLists.txt,False,"@@ -0,0 +1,46 @@
+################################################################################
+# Copyright (c) 2018, 2018 IBM Corp. and others
+#
+# This program and the accompanying materials are made available under
+# the terms of the Eclipse Public License 2.0 which accompanies this
+# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+# or the Apache License, Version 2.0 which accompanies this distribution and
+# is available at https://www.apache.org/licenses/LICENSE-2.0.
+#
+# This Source Code may also be made available under the following
+# Secondary Licenses when the conditions for such availability set
+# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+# General Public License, version 2 with the GNU Classpath
+# Exception [1] and GNU General Public License, version 2 with the
+# OpenJDK Assembly Exception [2].
+#
+# [1] https://www.gnu.org/software/classpath/license.html
+# [2] http://openjdk.java.net/legal/assembly-exception.html
+#
+# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+################################################################################
+
+cmake_minimum_required(VERSION 3.4 FATAL_ERROR)
+
+project(openj9)
+
+if(NOT $ENV{BOOT_JDK} STREQUAL """")
+    set(JAVA_HOME $ENV{BOOT_JDK})
+
+    # These variables are consumed when the ""Java"" language is enabled
+    set(CMAKE_Java_COMPILER ${JAVA_HOME}/bin/javac)
+    set(CMAKE_Java_RUNTIME ${JAVA_HOME}/bin/java)
+    set(CMAKE_Java_AR ${JAVA_HOME}/bin/jar)
+
+    set(Java_JAVA_EXECUTABLE ${JAVA_HOME}/bin/java)
+else()
+    message(STATUS ""BOOT_JDK is not set, default jdk will be used"")
+    include(FindJava)","You raise a good point.  I hadn't thought of the jit linter.

I was about to say it's not unreasonable to force it to pick a JDK but it kind of is.... That extra barrier isn't needed."
64073939,c3a740a43d04f573dbcbe6c808513d84135608a7,CONTRIBUTING.md,False,"@@ -69,6 +69,10 @@ copying resources into the body of the commit over providing external links.
 Structure large commit messages with headers, references etc. Remember, however,
 that the commit message is always going to be rendered in plain text.
 
+Please add `[skip ci]` to the commit message when the change doesn't require a 
+compilation, such as documentation only changes.  This is required to be good","Maybe ...such as documentation only changes, to avoid unnecessarily wasting the project's build resources.

?"
66222236,ca07097185747535aa4771d4ef7225f52be4486c,CONTRIBUTING.md,False,"@@ -90,7 +90,7 @@ Correct race in frobnicator
 
 This patch eliminates the race condition in issue #1234.
 
-Issue: #1234
+Fixes: #1234",@pshipton unfortunately I don't think this will work. https://help.github.com/articles/closing-issues-using-keywords/ states that the keyword must be followed by the issue number. The colon here will mess this up and GitHub won't recognize it.
97198289,f03250b724736a61e836f92a9aec5433eaa0bcad,CONTRIBUTING.md,False,"@@ -73,17 +73,11 @@ Please add `[skip ci]` to the commit message when the change doesn't require a
 compilation, such as documentation only changes, to avoid unnecessarily wasting
 the project's build resources.
 
-Use the commit footer to place commit metadata. The footer is the last block of
-contiguous text in the message. It is separated from the body by one or more
-blank lines, and as such cannot contain any blank lines. Lines in the footer are
-of the form:
-
-```
-Key: Value
-```
-
 When a commit has related issues or commits, explain the relation in the message
-body. You should also leave an `Issue` tag in the footer. For example:
+body. When appropriate, use the keywords described in the following help article
+to automatically close issues.
+https://help.github.com/articles/closing-issues-using-keywords/
+For example:
 
 ```
 Correct race in frobnicator ",Change lftm. Although I think the example commit message below is a little silly as it refs the issue # twice.
97300234,f03250b724736a61e836f92a9aec5433eaa0bcad,CONTRIBUTING.md,False,"@@ -73,17 +73,11 @@ Please add `[skip ci]` to the commit message when the change doesn't require a
 compilation, such as documentation only changes, to avoid unnecessarily wasting
 the project's build resources.
 
-Use the commit footer to place commit metadata. The footer is the last block of
-contiguous text in the message. It is separated from the body by one or more
-blank lines, and as such cannot contain any blank lines. Lines in the footer are
-of the form:
-
-```
-Key: Value
-```
-
 When a commit has related issues or commits, explain the relation in the message
-body. You should also leave an `Issue` tag in the footer. For example:
+body. When appropriate, use the keywords described in the following help article
+to automatically close issues.
+https://help.github.com/articles/closing-issues-using-keywords/
+For example:
 
 ```
 Correct race in frobnicator ",The example is just to demonstrate the different ways of referring to an issue.  Not a best practice :)
126460987,5fa86cae3454d035b4ab6c85b797c07528bcd443,CONTRIBUTING.md,False,"@@ -90,7 +90,9 @@ Fixes: #1234
 Sign off on your commit in the footer. By doing this, you assert original
 authorship of the commit and that you are permitted to contribute it. This can
 be automatically added to your commit by passing `-s` to `git commit`, or by
-manually adding the following line to the footer of the commit.
+manually adding the following line to the footer of the commit. The footer must
+be separated from the preceeding body or header with a blank line, and there must
+not be a blank line following the footer.","`and there must not be a blank line following the footer.`  Isn't this covered by the text a few lines down?

>Remember, if a blank line is found anywhere after the `Signed-off-by` line, the
`Signed-off-by:` will be considered outside of the footer, and will fail the
automated Signed-off-by validation"
126472621,5fa86cae3454d035b4ab6c85b797c07528bcd443,CONTRIBUTING.md,True,"@@ -90,7 +90,9 @@ Fixes: #1234
 Sign off on your commit in the footer. By doing this, you assert original
 authorship of the commit and that you are permitted to contribute it. This can
 be automatically added to your commit by passing `-s` to `git commit`, or by
-manually adding the following line to the footer of the commit.
+manually adding the following line to the footer of the commit. The footer must
+be separated from the preceeding body or header with a blank line, and there must
+not be a blank line following the footer.","Yes, just reinforces the previous sentence. I wanted to keep it concise and simple. I'm actually in favor of removing the ""Remember, if a blank..."" paragraph as it's to verbose. Thoughts?"
126541947,5fa86cae3454d035b4ab6c85b797c07528bcd443,CONTRIBUTING.md,False,"@@ -124,6 +126,7 @@ The guidelines are changed to:
   message.
 
 Closes: #124
+",I don't believe this is necessary - both Closes and Signed off can be part of the footer.
126585903,5fa86cae3454d035b4ab6c85b797c07528bcd443,CONTRIBUTING.md,True,"@@ -124,6 +126,7 @@ The guidelines are changed to:
   message.
 
 Closes: #124
+",https://github.com/eclipse/openj9/pull/1636#issuecomment-395081510 seems to imply otherwise. @IBMJimmyk can you validate the correctness of your comment?
126589200,5fa86cae3454d035b4ab6c85b797c07528bcd443,CONTRIBUTING.md,True,"@@ -124,6 +126,7 @@ The guidelines are changed to:
   message.
 
 Closes: #124
+","Actually @DanHeidinga there is a clear example of the check failing in https://github.com/eclipse/openj9/pull/2098. You can see the failure output (https://ci.eclipse.org/openj9/job/PullRequest-SignedOffByCheck-OpenJDK10/244/):

```
13:32:51 ###################################
[Pipeline] echo
13:32:55 FAILURE - The following commits appear to have an incorrect sign-off
[Pipeline] echo
13:33:02 commit afc2c20e928648a6277b2d17f5eebd01b2e75699
13:33:02 Author: Daniel Hong <daniel.hong@live.com>
13:33:02 Date:   Thu May 31 09:55:11 2018 -0400
13:33:02 
13:33:02     Re-enable toLowerCase/toUpperCase acceleration
13:33:02     
13:33:02     Modify API call so that caseConversionHelper recieves
13:33:02     underlying arrays and length of string.
13:33:02     
13:33:02     Closes: #1934
13:33:02     Signed-off-by: Daniel Hong <daniel.hong@live.com>
[Pipeline] echo
13:33:05 ###################################
```

So we do in fact need a new line between the ""Closes"" and ""Signed-off-by"" tags in the footer."
126592543,5fa86cae3454d035b4ab6c85b797c07528bcd443,CONTRIBUTING.md,True,"@@ -124,6 +126,7 @@ The guidelines are changed to:
   message.
 
 Closes: #124
+",Note the PR referenced has since been fixed up but I've linked the failing job in the above comments. It's easily reproducible as well.
126605192,5fa86cae3454d035b4ab6c85b797c07528bcd443,CONTRIBUTING.md,False,"@@ -124,6 +126,7 @@ The guidelines are changed to:
   message.
 
 Closes: #124
+",That just means the check we are implementing hasn't been implemented correctly. Its not the Eclipse ip-validation which was failing.
126616386,5fa86cae3454d035b4ab6c85b797c07528bcd443,CONTRIBUTING.md,True,"@@ -124,6 +126,7 @@ The guidelines are changed to:
   message.
 
 Closes: #124
+",So do we need an issue against our own check to handle this case and close this PR?
126618847,5fa86cae3454d035b4ab6c85b797c07528bcd443,CONTRIBUTING.md,False,"@@ -124,6 +126,7 @@ The guidelines are changed to:
   message.
 
 Closes: #124
+","There already is an issue open, the check is WIP and being testing on the OpenJ9 repo. 
https://github.com/ibmruntimes/openj9-openjdk-jdk9/issues/58#issuecomment-395229037
https://github.com/eclipse/openj9/pull/1941

Yes I think we can close this PR."
89608661,5cfc140834498079916142e26a70ba9497ec431d,LICENSE,False,"@@ -577,4 +577,142 @@ be misrepresented as being the original software.
 3. This notice may not be removed or altered from any source
 distribution.
 
+H. stddef.h
+stddef.h is derived from the the same file in the musl project
+http://www.musl-libc.org/ which is licensed as follows.
+
+musl as a whole is licensed under the following standard MIT license:
+
+----------------------------------------------------------------------
+Copyright © 2005-2014 Rich Felker, et al.
+
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of this software and associated documentation files (the
+""Software""), to deal in the Software without restriction, including
+without limitation the rights to use, copy, modify, merge, publish,
+distribute, sublicense, and/or sell copies of the Software, and to
+permit persons to whom the Software is furnished to do so, subject to
+the following conditions:
+
+The above copyright notice and this permission notice shall be
+included in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
+IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
+CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
+TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
+SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+----------------------------------------------------------------------
+","I don't think we need to add anything below here, the requirement is only to add the above copyright and permission notice."
89617102,5cfc140834498079916142e26a70ba9497ec431d,LICENSE,False,"@@ -577,4 +577,142 @@ be misrepresented as being the original software.
 3. This notice may not be removed or altered from any source
 distribution.
 
+H. stddef.h","Please just call it musl and only include below what is between the horizontal lines, but remove the lines."
89851341,5cfc140834498079916142e26a70ba9497ec431d,LICENSE,True,"@@ -577,4 +577,142 @@ be misrepresented as being the original software.
 3. This notice may not be removed or altered from any source
 distribution.
 
+H. stddef.h
+stddef.h is derived from the the same file in the musl project
+http://www.musl-libc.org/ which is licensed as follows.
+
+musl as a whole is licensed under the following standard MIT license:
+
+----------------------------------------------------------------------
+Copyright © 2005-2014 Rich Felker, et al.
+
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of this software and associated documentation files (the
+""Software""), to deal in the Software without restriction, including
+without limitation the rights to use, copy, modify, merge, publish,
+distribute, sublicense, and/or sell copies of the Software, and to
+permit persons to whom the Software is furnished to do so, subject to
+the following conditions:
+
+The above copyright notice and this permission notice shall be
+included in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
+IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
+CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
+TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
+SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+----------------------------------------------------------------------
+",Done.
89851721,5cfc140834498079916142e26a70ba9497ec431d,LICENSE,True,"@@ -577,4 +577,142 @@ be misrepresented as being the original software.
 3. This notice may not be removed or altered from any source
 distribution.
 
+H. stddef.h",Done.
89853483,5cfc140834498079916142e26a70ba9497ec431d,LICENSE,True,"@@ -577,4 +577,142 @@ be misrepresented as being the original software.
 3. This notice may not be removed or altered from any source
 distribution.
 
+H. stddef.h
+stddef.h is derived from the the same file in the musl project
+http://www.musl-libc.org/ which is licensed as follows.
+
+musl as a whole is licensed under the following standard MIT license:
+
+----------------------------------------------------------------------
+Copyright © 2005-2014 Rich Felker, et al.
+
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of this software and associated documentation files (the
+""Software""), to deal in the Software without restriction, including
+without limitation the rights to use, copy, modify, merge, publish,
+distribute, sublicense, and/or sell copies of the Software, and to
+permit persons to whom the Software is furnished to do so, subject to
+the following conditions:
+
+The above copyright notice and this permission notice shall be
+included in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
+IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
+CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
+TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
+SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+----------------------------------------------------------------------
+",Done.
89853574,5cfc140834498079916142e26a70ba9497ec431d,LICENSE,True,"@@ -577,4 +577,142 @@ be misrepresented as being the original software.
 3. This notice may not be removed or altered from any source
 distribution.
 
+H. stddef.h",Done
328569488,8f1c520c252180ebcfdbfcab4986b2fd3a514330,README.fr.md,True,"@@ -0,0 +1,117 @@
+<!--
+Copyright (c) 2017, 2019 IBM Corp. and others
+
+Ce programme et le matériel d'accompagnement sont disponibles sous","The license shouldn't be translated, it should remain in English."
69640765,e5140fa59fb54065abc6115c2681a3d43f5c74bc,README.md,False,"@@ -62,10 +62,14 @@ To get started, read our [Contribution Guide](CONTRIBUTING.md).
 Where can I learn more?
 =======================
 
-Presentations
--------------
-
-- [J9: Under the hood of the next open source JVM](https://www.slideshare.net/DanHeidinga/j9-under-the-hood-of-the-next-open-source-jvm)
+Videos and Presentations
+------------------------
+
+- [JavaOne 2017: John Duimovich and Mike Milenkovich having fun chatting about Eclipse OpenJ9 (and EE4J)](https://www.youtube.com/watch?v=4g9SdVCPlnk)
+- [JavaOne 2017: Holly Cummins interviewing Dan Heidinga and Mark Stoodley on Eclipse OpenJ9 and OMR](https://www.youtube.com/watch?v=c1LVXqD3cII)
+- [JavaOne 2017: Open sourcing the IBM J9 Java Virtual Machine[(https://www.slideshare.net/MarkStoodley/javaone-2017-mark-stoodley-open-sourcing-ibm-j9-jvm)","`[JavaOne 2017: Open sourcing the IBM J9 Java Virtual Machine[`
The final `[` should be a `]`"
69680363,e5140fa59fb54065abc6115c2681a3d43f5c74bc,README.md,True,"@@ -62,10 +62,14 @@ To get started, read our [Contribution Guide](CONTRIBUTING.md).
 Where can I learn more?
 =======================
 
-Presentations
--------------
-
-- [J9: Under the hood of the next open source JVM](https://www.slideshare.net/DanHeidinga/j9-under-the-hood-of-the-next-open-source-jvm)
+Videos and Presentations
+------------------------
+
+- [JavaOne 2017: John Duimovich and Mike Milenkovich having fun chatting about Eclipse OpenJ9 (and EE4J)](https://www.youtube.com/watch?v=4g9SdVCPlnk)
+- [JavaOne 2017: Holly Cummins interviewing Dan Heidinga and Mark Stoodley on Eclipse OpenJ9 and OMR](https://www.youtube.com/watch?v=c1LVXqD3cII)
+- [JavaOne 2017: Open sourcing the IBM J9 Java Virtual Machine[(https://www.slideshare.net/MarkStoodley/javaone-2017-mark-stoodley-open-sourcing-ibm-j9-jvm)",d'oh!
125631449,d615c9010b2ca3b1bfc2d0a5f3e01a608f4a6d74,README.md,False,"@@ -39,6 +39,19 @@ We're not sure which route you might have taken on your way here, but we're real
 
 Hopefully you're here because you want to get involved in the project? Read on ...
 
+What is Eclipse OpenJ9?
+=======================
+
+Eclipse OpenJ9 is an independent implementation of a Java Virtual Machine. ""Independent implementation"" means
+it was built using the Java Virtual Machine specification without using any code from any other Java Virtual
+Machine. OpenJ9 was originally built by IBM and was called ""J9"" for the last two decades. In September 2017,
+IBM completed open sourcing the J9 JVM as ""Eclipse OpenJ9"" at the Eclipse Foundation (significant parts of
+which are also open source at the [Eclipse OMR project](https://github.com/eclipse/omr)). OpenJ9 has a
+permissive license (Apache License 2.0 or Eclipse Public License 2.0 with a secondard compatibility license",secondard -> secondary
125711087,d615c9010b2ca3b1bfc2d0a5f3e01a608f4a6d74,README.md,True,"@@ -39,6 +39,19 @@ We're not sure which route you might have taken on your way here, but we're real
 
 Hopefully you're here because you want to get involved in the project? Read on ...
 
+What is Eclipse OpenJ9?
+=======================
+
+Eclipse OpenJ9 is an independent implementation of a Java Virtual Machine. ""Independent implementation"" means
+it was built using the Java Virtual Machine specification without using any code from any other Java Virtual
+Machine. OpenJ9 was originally built by IBM and was called ""J9"" for the last two decades. In September 2017,
+IBM completed open sourcing the J9 JVM as ""Eclipse OpenJ9"" at the Eclipse Foundation (significant parts of
+which are also open source at the [Eclipse OMR project](https://github.com/eclipse/omr)). OpenJ9 has a
+permissive license (Apache License 2.0 or Eclipse Public License 2.0 with a secondard compatibility license","fixed, thanks for noticing"
111398691,2973ec8c95067111d45394a8c033b82e7c771331,buildenv/Build_Instructions_V10.md,False,"@@ -0,0 +1,431 @@
+<!--
+Copyright (c) 2018, 2018 IBM Corp. and others
+
+This program and the accompanying materials are made available under
+the terms of the Eclipse Public License 2.0 which accompanies this
+distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+or the Apache License, Version 2.0 which accompanies this distribution and
+is available at https://www.apache.org/licenses/LICENSE-2.0.
+
+This Source Code may also be made available under the following
+Secondary Licenses when the conditions for such availability set
+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+General Public License, version 2 with the GNU Classpath
+Exception [1] and GNU General Public License, version 2 with the
+OpenJDK Assembly Exception [2].
+
+[1] https://www.gnu.org/software/classpath/license.html
+[2] http://openjdk.java.net/legal/assembly-exception.html
+
+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+-->
+
+Building OpenJDK Version 10 with OpenJ9
+======================================
+
+Our website describes a simple [build process](http://www.eclipse.org/openj9/oj9_build.html)
+that uses Docker and Dockerfiles to create a build environment that contains everything
+you need to easily build a Linux binary of **OpenJDK V10** with the Eclipse OpenJ9 virtual machine.
+A more complete set of build instructions are included here for multiple platforms:
+
+- [Linux :penguin:](#linux)
+- [AIX :blue_book:](#aix)
+- [Windows :ledger:](#windows)
+- [MacOS :apple:](#macos)
+- [ARM :iphone:](#arm)
+
+----------------------------------
+
+## Linux
+:penguin:
+This build process provides detailed instructions for building a Linux x86-64 binary of **OpenJDK V10** with OpenJ9 on Ubuntu 16.04. The binary can be built directly on your system, in a virtual
+machine, or in a Docker container :whale:.
+
+If you are using a different Linux distribution, you might have to review the list of libraries that are bundled with your distribution and/or modify the instructions to use equivalent commands to the Advanced Packaging Tool (APT). For example, for Centos, substitute the `apt-get` command with `yum`.
+
+If you want to build a binary for Linux on a different architecture, such as Power Systems&trade; or z Systems&trade;, the process is very similar and any additional information for those architectures are included as Notes :pencil: as we go along.
+
+### 1. Prepare your system
+:penguin:
+Instructions are provided for preparing your system with and without the use of Docker technology.
+
+Skip to [Setting up your build environment without Docker](#setting-up-your-build-environment-without-docker).
+
+#### Setting up your build environment with Docker :whale:
+If you want to build a binary by using a Docker container, follow these steps to prepare your system:
+
+1. The first thing you need to do is install Docker. You can download the free Community edition from [here](https://docs.docker.com/engine/installation/), which also contains instructions for installing Docker on your system.  You should also read the [Getting started](https://docs.docker.com/get-started/) guide to familiarise yourself with the basic Docker concepts and terminology.
+
+2. Obtain the [Linux on 64-bit x86 systems Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) to build and run a container that has all the correct software pre-requisites.
+
+    :pencil: Dockerfiles are also available for the following Linux architectures: [Linux on 64-bit Power systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on 64-bit z Systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile)
+
+    Either download one of these Dockerfiles to your local system or copy and paste one of the following commands:
+
+  - For Linux on 64-bit x86 systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit Power systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit z Systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile
+```
+
+3. Next, run the following command to build a Docker image, called **openj9**:
+```
+docker build -t openj9 -f Dockerfile .
+```
+
+4. Start a Docker container from the **openj9** image with the following command, where `-v` maps any directory, `<host_directory>`,
+on your local system to the containers `/root/hostdir` directory so that you can store the binaries, once they are built:
+```
+docker run -v <host_directory>:/root/hostdir -it openj9
+```
+
+:pencil: Depending on your [Docker system configuration](https://docs.docker.com/engine/reference/commandline/cli/#description), you might need to prefix the `docker` commands with `sudo`.
+
+Now that you have the Docker image running, you are ready to move to the next step, [Get the source](#2-get-the-source).
+
+#### Setting up your build environment without Docker
+
+If you don't want to user Docker, you can still build an **OpenJDK V10** with OpenJ9 directly on your Ubuntu system or in a Ubuntu virtual machine. Use the
+[Linux on x86 Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) like a recipe card to determine the software dependencies
+that must be installed on the system, plus a few configuration steps.
+
+:pencil:
+Not on x86? We also have Dockerfiles for the following Linux architectures: [Linux on Power systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on z Systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile).
+
+1. Install the list of dependencies that can be obtained with the `apt-get` command from the following section of the Dockerfile:
+```
+apt-get update \
+  && apt-get install -qq -y --no-install-recommends \
+    autoconf \
+    ca-certificates \
+    ...
+```
+
+2. This build uses the same gcc and g++ compiler levels as OpenJDK, which might be
+backlevel compared with the versions you use on your system. Create links for
+the compilers with the following commands:
+```
+ln -s g++ /usr/bin/c++
+ln -s g++-4.8 /usr/bin/g++
+ln -s gcc /usr/bin/cc
+ln -s gcc-4.8 /usr/bin/gcc
+```
+
+3. Download and setup **freemarker.jar** into a directory. The example commands use `/root` to be consistent with the Docker instructions. If you aren't
+using Docker, you probably want to store the **freemarker.jar** in your home directory.
+```
+cd /root",This and the following could use `${HOME}` instead of `/root`
111398691,2973ec8c95067111d45394a8c033b82e7c771331,buildenv/Build_Instructions_V10.md,False,"@@ -0,0 +1,431 @@
+<!--
+Copyright (c) 2018, 2018 IBM Corp. and others
+
+This program and the accompanying materials are made available under
+the terms of the Eclipse Public License 2.0 which accompanies this
+distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+or the Apache License, Version 2.0 which accompanies this distribution and
+is available at https://www.apache.org/licenses/LICENSE-2.0.
+
+This Source Code may also be made available under the following
+Secondary Licenses when the conditions for such availability set
+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+General Public License, version 2 with the GNU Classpath
+Exception [1] and GNU General Public License, version 2 with the
+OpenJDK Assembly Exception [2].
+
+[1] https://www.gnu.org/software/classpath/license.html
+[2] http://openjdk.java.net/legal/assembly-exception.html
+
+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+-->
+
+Building OpenJDK Version 10 with OpenJ9
+======================================
+
+Our website describes a simple [build process](http://www.eclipse.org/openj9/oj9_build.html)
+that uses Docker and Dockerfiles to create a build environment that contains everything
+you need to easily build a Linux binary of **OpenJDK V10** with the Eclipse OpenJ9 virtual machine.
+A more complete set of build instructions are included here for multiple platforms:
+
+- [Linux :penguin:](#linux)
+- [AIX :blue_book:](#aix)
+- [Windows :ledger:](#windows)
+- [MacOS :apple:](#macos)
+- [ARM :iphone:](#arm)
+
+----------------------------------
+
+## Linux
+:penguin:
+This build process provides detailed instructions for building a Linux x86-64 binary of **OpenJDK V10** with OpenJ9 on Ubuntu 16.04. The binary can be built directly on your system, in a virtual
+machine, or in a Docker container :whale:.
+
+If you are using a different Linux distribution, you might have to review the list of libraries that are bundled with your distribution and/or modify the instructions to use equivalent commands to the Advanced Packaging Tool (APT). For example, for Centos, substitute the `apt-get` command with `yum`.
+
+If you want to build a binary for Linux on a different architecture, such as Power Systems&trade; or z Systems&trade;, the process is very similar and any additional information for those architectures are included as Notes :pencil: as we go along.
+
+### 1. Prepare your system
+:penguin:
+Instructions are provided for preparing your system with and without the use of Docker technology.
+
+Skip to [Setting up your build environment without Docker](#setting-up-your-build-environment-without-docker).
+
+#### Setting up your build environment with Docker :whale:
+If you want to build a binary by using a Docker container, follow these steps to prepare your system:
+
+1. The first thing you need to do is install Docker. You can download the free Community edition from [here](https://docs.docker.com/engine/installation/), which also contains instructions for installing Docker on your system.  You should also read the [Getting started](https://docs.docker.com/get-started/) guide to familiarise yourself with the basic Docker concepts and terminology.
+
+2. Obtain the [Linux on 64-bit x86 systems Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) to build and run a container that has all the correct software pre-requisites.
+
+    :pencil: Dockerfiles are also available for the following Linux architectures: [Linux on 64-bit Power systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on 64-bit z Systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile)
+
+    Either download one of these Dockerfiles to your local system or copy and paste one of the following commands:
+
+  - For Linux on 64-bit x86 systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit Power systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit z Systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile
+```
+
+3. Next, run the following command to build a Docker image, called **openj9**:
+```
+docker build -t openj9 -f Dockerfile .
+```
+
+4. Start a Docker container from the **openj9** image with the following command, where `-v` maps any directory, `<host_directory>`,
+on your local system to the containers `/root/hostdir` directory so that you can store the binaries, once they are built:
+```
+docker run -v <host_directory>:/root/hostdir -it openj9
+```
+
+:pencil: Depending on your [Docker system configuration](https://docs.docker.com/engine/reference/commandline/cli/#description), you might need to prefix the `docker` commands with `sudo`.
+
+Now that you have the Docker image running, you are ready to move to the next step, [Get the source](#2-get-the-source).
+
+#### Setting up your build environment without Docker
+
+If you don't want to user Docker, you can still build an **OpenJDK V10** with OpenJ9 directly on your Ubuntu system or in a Ubuntu virtual machine. Use the
+[Linux on x86 Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) like a recipe card to determine the software dependencies
+that must be installed on the system, plus a few configuration steps.
+
+:pencil:
+Not on x86? We also have Dockerfiles for the following Linux architectures: [Linux on Power systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on z Systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile).
+
+1. Install the list of dependencies that can be obtained with the `apt-get` command from the following section of the Dockerfile:
+```
+apt-get update \
+  && apt-get install -qq -y --no-install-recommends \
+    autoconf \
+    ca-certificates \
+    ...
+```
+
+2. This build uses the same gcc and g++ compiler levels as OpenJDK, which might be
+backlevel compared with the versions you use on your system. Create links for
+the compilers with the following commands:
+```
+ln -s g++ /usr/bin/c++
+ln -s g++-4.8 /usr/bin/g++
+ln -s gcc /usr/bin/cc
+ln -s gcc-4.8 /usr/bin/gcc
+```
+
+3. Download and setup **freemarker.jar** into a directory. The example commands use `/root` to be consistent with the Docker instructions. If you aren't
+using Docker, you probably want to store the **freemarker.jar** in your home directory.
+```
+cd /root
+wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz
+tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2
+rm -f freemarker.tgz
+```
+
+4. Download and setup the boot JDK using the latest AdoptOpenJDK v9 build.
+```
+cd /root
+wget -O bootjdk9.tar.gz https://api.adoptopenjdk.net/openjdk9-openj9/releases/x64_linux/latest/binary
+tar -xzf bootjdk9.tar.gz
+rm -f bootjdk9.tar.gz
+ls | grep -i jdk | xargs -I % sh -c 'mv % bootjdk9'
+
+export JAVA_HOME=""/root/bootjdk9""
+export PATH=""${JAVA_HOME}/bin:${PATH}""
+```
+
+### 2. Get the source
+:penguin:
+First you need to clone the Extensions for OpenJDK for OpenJ9 project. This repository is a git mirror of OpenJDK without the HotSpot JVM, but with an **openj9** branch that contains a few necessary patches. Run the following command:
+```
+git clone https://github.com/ibmruntimes/openj9-openjdk-jdk10.git
+```
+Cloning this repository can take a while because OpenJDK is a large project! When the process is complete, change directory into the cloned repository:
+```
+cd openj9-openjdk-jdk10
+```
+Now fetch additional sources from the Eclipse OpenJ9 project and its clone of Eclipse OMR:
+```
+bash get_source.sh
+```
+
+### 3. Configure
+:penguin:
+When you have all the source files that you need, run the configure script, which detects how to build in the current build environment.
+```
+bash configure --with-freemarker-jar=/root/freemarker.jar
+```
+:warning: You must give an absolute path to freemarker.jar
+
+### 4. Build
+:penguin:
+Now you're ready to build **OpenJDK V10** with OpenJ9:
+```
+make all
+```
+:warning: If you just type `make`, rather than `make all` your build will fail, because the default `make` target is `exploded-image`. If you want to specify `make` instead of `make all`, you must add `--default-make-target=images` when you run the configure script. For more information, read this [issue](https://github.com/ibmruntimes/openj9-openjdk-jdk10/issues/34).","The open issue is on jdk9, the jdk10 link is invalid."
111398691,2973ec8c95067111d45394a8c033b82e7c771331,buildenv/Build_Instructions_V10.md,False,"@@ -0,0 +1,431 @@
+<!--
+Copyright (c) 2018, 2018 IBM Corp. and others
+
+This program and the accompanying materials are made available under
+the terms of the Eclipse Public License 2.0 which accompanies this
+distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+or the Apache License, Version 2.0 which accompanies this distribution and
+is available at https://www.apache.org/licenses/LICENSE-2.0.
+
+This Source Code may also be made available under the following
+Secondary Licenses when the conditions for such availability set
+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+General Public License, version 2 with the GNU Classpath
+Exception [1] and GNU General Public License, version 2 with the
+OpenJDK Assembly Exception [2].
+
+[1] https://www.gnu.org/software/classpath/license.html
+[2] http://openjdk.java.net/legal/assembly-exception.html
+
+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+-->
+
+Building OpenJDK Version 10 with OpenJ9
+======================================
+
+Our website describes a simple [build process](http://www.eclipse.org/openj9/oj9_build.html)
+that uses Docker and Dockerfiles to create a build environment that contains everything
+you need to easily build a Linux binary of **OpenJDK V10** with the Eclipse OpenJ9 virtual machine.
+A more complete set of build instructions are included here for multiple platforms:
+
+- [Linux :penguin:](#linux)
+- [AIX :blue_book:](#aix)
+- [Windows :ledger:](#windows)
+- [MacOS :apple:](#macos)
+- [ARM :iphone:](#arm)
+
+----------------------------------
+
+## Linux
+:penguin:
+This build process provides detailed instructions for building a Linux x86-64 binary of **OpenJDK V10** with OpenJ9 on Ubuntu 16.04. The binary can be built directly on your system, in a virtual
+machine, or in a Docker container :whale:.
+
+If you are using a different Linux distribution, you might have to review the list of libraries that are bundled with your distribution and/or modify the instructions to use equivalent commands to the Advanced Packaging Tool (APT). For example, for Centos, substitute the `apt-get` command with `yum`.
+
+If you want to build a binary for Linux on a different architecture, such as Power Systems&trade; or z Systems&trade;, the process is very similar and any additional information for those architectures are included as Notes :pencil: as we go along.
+
+### 1. Prepare your system
+:penguin:
+Instructions are provided for preparing your system with and without the use of Docker technology.
+
+Skip to [Setting up your build environment without Docker](#setting-up-your-build-environment-without-docker).
+
+#### Setting up your build environment with Docker :whale:
+If you want to build a binary by using a Docker container, follow these steps to prepare your system:
+
+1. The first thing you need to do is install Docker. You can download the free Community edition from [here](https://docs.docker.com/engine/installation/), which also contains instructions for installing Docker on your system.  You should also read the [Getting started](https://docs.docker.com/get-started/) guide to familiarise yourself with the basic Docker concepts and terminology.
+
+2. Obtain the [Linux on 64-bit x86 systems Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) to build and run a container that has all the correct software pre-requisites.
+
+    :pencil: Dockerfiles are also available for the following Linux architectures: [Linux on 64-bit Power systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on 64-bit z Systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile)
+
+    Either download one of these Dockerfiles to your local system or copy and paste one of the following commands:
+
+  - For Linux on 64-bit x86 systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit Power systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit z Systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile
+```
+
+3. Next, run the following command to build a Docker image, called **openj9**:
+```
+docker build -t openj9 -f Dockerfile .
+```
+
+4. Start a Docker container from the **openj9** image with the following command, where `-v` maps any directory, `<host_directory>`,
+on your local system to the containers `/root/hostdir` directory so that you can store the binaries, once they are built:
+```
+docker run -v <host_directory>:/root/hostdir -it openj9
+```
+
+:pencil: Depending on your [Docker system configuration](https://docs.docker.com/engine/reference/commandline/cli/#description), you might need to prefix the `docker` commands with `sudo`.
+
+Now that you have the Docker image running, you are ready to move to the next step, [Get the source](#2-get-the-source).
+
+#### Setting up your build environment without Docker
+
+If you don't want to user Docker, you can still build an **OpenJDK V10** with OpenJ9 directly on your Ubuntu system or in a Ubuntu virtual machine. Use the
+[Linux on x86 Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) like a recipe card to determine the software dependencies
+that must be installed on the system, plus a few configuration steps.
+
+:pencil:
+Not on x86? We also have Dockerfiles for the following Linux architectures: [Linux on Power systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on z Systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile).
+
+1. Install the list of dependencies that can be obtained with the `apt-get` command from the following section of the Dockerfile:
+```
+apt-get update \
+  && apt-get install -qq -y --no-install-recommends \
+    autoconf \
+    ca-certificates \
+    ...
+```
+
+2. This build uses the same gcc and g++ compiler levels as OpenJDK, which might be
+backlevel compared with the versions you use on your system. Create links for
+the compilers with the following commands:
+```
+ln -s g++ /usr/bin/c++
+ln -s g++-4.8 /usr/bin/g++
+ln -s gcc /usr/bin/cc
+ln -s gcc-4.8 /usr/bin/gcc
+```
+
+3. Download and setup **freemarker.jar** into a directory. The example commands use `/root` to be consistent with the Docker instructions. If you aren't
+using Docker, you probably want to store the **freemarker.jar** in your home directory.
+```
+cd /root
+wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz
+tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2
+rm -f freemarker.tgz
+```
+
+4. Download and setup the boot JDK using the latest AdoptOpenJDK v9 build.
+```
+cd /root
+wget -O bootjdk9.tar.gz https://api.adoptopenjdk.net/openjdk9-openj9/releases/x64_linux/latest/binary
+tar -xzf bootjdk9.tar.gz
+rm -f bootjdk9.tar.gz
+ls | grep -i jdk | xargs -I % sh -c 'mv % bootjdk9'
+
+export JAVA_HOME=""/root/bootjdk9""
+export PATH=""${JAVA_HOME}/bin:${PATH}""
+```
+
+### 2. Get the source
+:penguin:
+First you need to clone the Extensions for OpenJDK for OpenJ9 project. This repository is a git mirror of OpenJDK without the HotSpot JVM, but with an **openj9** branch that contains a few necessary patches. Run the following command:
+```
+git clone https://github.com/ibmruntimes/openj9-openjdk-jdk10.git
+```
+Cloning this repository can take a while because OpenJDK is a large project! When the process is complete, change directory into the cloned repository:
+```
+cd openj9-openjdk-jdk10
+```
+Now fetch additional sources from the Eclipse OpenJ9 project and its clone of Eclipse OMR:
+```
+bash get_source.sh
+```
+
+### 3. Configure
+:penguin:
+When you have all the source files that you need, run the configure script, which detects how to build in the current build environment.
+```
+bash configure --with-freemarker-jar=/root/freemarker.jar
+```
+:warning: You must give an absolute path to freemarker.jar
+
+### 4. Build
+:penguin:
+Now you're ready to build **OpenJDK V10** with OpenJ9:
+```
+make all
+```
+:warning: If you just type `make`, rather than `make all` your build will fail, because the default `make` target is `exploded-image`. If you want to specify `make` instead of `make all`, you must add `--default-make-target=images` when you run the configure script. For more information, read this [issue](https://github.com/ibmruntimes/openj9-openjdk-jdk10/issues/34).
+
+Two Java builds are produced: a full developer kit (jdk) and a runtime environment (jre)
+- **build/linux-x86_64-normal-server-release/images/jdk**
+- **build/linux-x86_64-normal-server-release/images/jre**
+
+    :whale: If you built your binaries in a Docker container, copy the binaries to the containers **/root/hostdir** directory so that you can access them on your local system. You'll find them in the directory you set for `<host_directory>` when you started your Docker container. See [Setting up your build environment with Docker](#setting-up-your-build-environment-with-docker).
+
+    :pencil: On other architectures the **/jdk** and **/jre** directories are in **build/linux-ppc64le-normal-server-release/images** (Linux on 64-bit Power systems) and **build/linux-s390x-normal-server-release/images** (Linux on 64-bit z Systems)
+
+### 5. Test
+:penguin:
+For a simple test, try running the `java -version` command.
+Change to the /jre directory:
+```
+cd build/linux-x86_64-normal-server-release/images/jre
+```
+Run:
+```
+./bin/java -version
+```
+
+Here is some sample output:
+
+```
+openjdk version ""10-internal"" 2018-03-20
+OpenJDK Runtime Environment (build 10-internal+0-adhoc..openj9-openjdk-jdk10)
+Eclipse OpenJ9 VM (build master-4ecf784, JRE 10 Linux amd64-64 Compressed References 20180411_000000 (JIT enabled, AOT enabled)
+OpenJ9   - 4ecf784
+OMR      - cb9e24d
+JCL      - eaa06eb based on jdk-10+46)
+```
+:penguin: *Congratulations!* :tada:
+
+----------------------------------
+
+## AIX
+:blue_book:
+
+:construction:
+This section is still under construction. Further contributions expected.",I don't think we need this warning any more.
111402532,2973ec8c95067111d45394a8c033b82e7c771331,buildenv/Build_Instructions_V10.md,False,"@@ -0,0 +1,431 @@
+<!--
+Copyright (c) 2018, 2018 IBM Corp. and others
+
+This program and the accompanying materials are made available under
+the terms of the Eclipse Public License 2.0 which accompanies this
+distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+or the Apache License, Version 2.0 which accompanies this distribution and
+is available at https://www.apache.org/licenses/LICENSE-2.0.
+
+This Source Code may also be made available under the following
+Secondary Licenses when the conditions for such availability set
+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+General Public License, version 2 with the GNU Classpath
+Exception [1] and GNU General Public License, version 2 with the
+OpenJDK Assembly Exception [2].
+
+[1] https://www.gnu.org/software/classpath/license.html
+[2] http://openjdk.java.net/legal/assembly-exception.html
+
+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+-->
+
+Building OpenJDK Version 10 with OpenJ9
+======================================
+
+Our website describes a simple [build process](http://www.eclipse.org/openj9/oj9_build.html)
+that uses Docker and Dockerfiles to create a build environment that contains everything
+you need to easily build a Linux binary of **OpenJDK V10** with the Eclipse OpenJ9 virtual machine.
+A more complete set of build instructions are included here for multiple platforms:
+
+- [Linux :penguin:](#linux)
+- [AIX :blue_book:](#aix)
+- [Windows :ledger:](#windows)
+- [MacOS :apple:](#macos)
+- [ARM :iphone:](#arm)
+
+----------------------------------
+
+## Linux
+:penguin:
+This build process provides detailed instructions for building a Linux x86-64 binary of **OpenJDK V10** with OpenJ9 on Ubuntu 16.04. The binary can be built directly on your system, in a virtual
+machine, or in a Docker container :whale:.
+
+If you are using a different Linux distribution, you might have to review the list of libraries that are bundled with your distribution and/or modify the instructions to use equivalent commands to the Advanced Packaging Tool (APT). For example, for Centos, substitute the `apt-get` command with `yum`.
+
+If you want to build a binary for Linux on a different architecture, such as Power Systems&trade; or z Systems&trade;, the process is very similar and any additional information for those architectures are included as Notes :pencil: as we go along.
+
+### 1. Prepare your system
+:penguin:
+Instructions are provided for preparing your system with and without the use of Docker technology.
+
+Skip to [Setting up your build environment without Docker](#setting-up-your-build-environment-without-docker).
+
+#### Setting up your build environment with Docker :whale:
+If you want to build a binary by using a Docker container, follow these steps to prepare your system:
+
+1. The first thing you need to do is install Docker. You can download the free Community edition from [here](https://docs.docker.com/engine/installation/), which also contains instructions for installing Docker on your system.  You should also read the [Getting started](https://docs.docker.com/get-started/) guide to familiarise yourself with the basic Docker concepts and terminology.
+
+2. Obtain the [Linux on 64-bit x86 systems Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) to build and run a container that has all the correct software pre-requisites.
+
+    :pencil: Dockerfiles are also available for the following Linux architectures: [Linux on 64-bit Power systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on 64-bit z Systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile)
+
+    Either download one of these Dockerfiles to your local system or copy and paste one of the following commands:
+
+  - For Linux on 64-bit x86 systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit Power systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit z Systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile
+```
+
+3. Next, run the following command to build a Docker image, called **openj9**:
+```
+docker build -t openj9 -f Dockerfile .
+```
+
+4. Start a Docker container from the **openj9** image with the following command, where `-v` maps any directory, `<host_directory>`,
+on your local system to the containers `/root/hostdir` directory so that you can store the binaries, once they are built:
+```
+docker run -v <host_directory>:/root/hostdir -it openj9
+```
+
+:pencil: Depending on your [Docker system configuration](https://docs.docker.com/engine/reference/commandline/cli/#description), you might need to prefix the `docker` commands with `sudo`.
+
+Now that you have the Docker image running, you are ready to move to the next step, [Get the source](#2-get-the-source).
+
+#### Setting up your build environment without Docker
+
+If you don't want to user Docker, you can still build an **OpenJDK V10** with OpenJ9 directly on your Ubuntu system or in a Ubuntu virtual machine. Use the
+[Linux on x86 Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) like a recipe card to determine the software dependencies
+that must be installed on the system, plus a few configuration steps.
+
+:pencil:
+Not on x86? We also have Dockerfiles for the following Linux architectures: [Linux on Power systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on z Systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile).
+
+1. Install the list of dependencies that can be obtained with the `apt-get` command from the following section of the Dockerfile:
+```
+apt-get update \
+  && apt-get install -qq -y --no-install-recommends \
+    autoconf \
+    ca-certificates \
+    ...
+```
+
+2. This build uses the same gcc and g++ compiler levels as OpenJDK, which might be
+backlevel compared with the versions you use on your system. Create links for
+the compilers with the following commands:
+```
+ln -s g++ /usr/bin/c++
+ln -s g++-4.8 /usr/bin/g++
+ln -s gcc /usr/bin/cc
+ln -s gcc-4.8 /usr/bin/gcc
+```
+
+3. Download and setup **freemarker.jar** into a directory. The example commands use `/root` to be consistent with the Docker instructions. If you aren't
+using Docker, you probably want to store the **freemarker.jar** in your home directory.
+```
+cd /root
+wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz
+tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2
+rm -f freemarker.tgz
+```
+
+4. Download and setup the boot JDK using the latest AdoptOpenJDK v9 build.
+```
+cd /root
+wget -O bootjdk9.tar.gz https://api.adoptopenjdk.net/openjdk9-openj9/releases/x64_linux/latest/binary
+tar -xzf bootjdk9.tar.gz
+rm -f bootjdk9.tar.gz
+ls | grep -i jdk | xargs -I % sh -c 'mv % bootjdk9'
+
+export JAVA_HOME=""/root/bootjdk9""
+export PATH=""${JAVA_HOME}/bin:${PATH}""
+```
+
+### 2. Get the source
+:penguin:
+First you need to clone the Extensions for OpenJDK for OpenJ9 project. This repository is a git mirror of OpenJDK without the HotSpot JVM, but with an **openj9** branch that contains a few necessary patches. Run the following command:
+```
+git clone https://github.com/ibmruntimes/openj9-openjdk-jdk10.git
+```
+Cloning this repository can take a while because OpenJDK is a large project! When the process is complete, change directory into the cloned repository:
+```
+cd openj9-openjdk-jdk10
+```
+Now fetch additional sources from the Eclipse OpenJ9 project and its clone of Eclipse OMR:
+```
+bash get_source.sh
+```
+
+### 3. Configure
+:penguin:
+When you have all the source files that you need, run the configure script, which detects how to build in the current build environment.
+```
+bash configure --with-freemarker-jar=/root/freemarker.jar
+```
+:warning: You must give an absolute path to freemarker.jar
+
+### 4. Build
+:penguin:
+Now you're ready to build **OpenJDK V10** with OpenJ9:
+```
+make all
+```
+:warning: If you just type `make`, rather than `make all` your build will fail, because the default `make` target is `exploded-image`. If you want to specify `make` instead of `make all`, you must add `--default-make-target=images` when you run the configure script. For more information, read this [issue](https://github.com/ibmruntimes/openj9-openjdk-jdk10/issues/34).",Not sure if this is still an issue for jdk10
111411023,2973ec8c95067111d45394a8c033b82e7c771331,buildenv/Build_Instructions_V10.md,True,"@@ -0,0 +1,431 @@
+<!--
+Copyright (c) 2018, 2018 IBM Corp. and others
+
+This program and the accompanying materials are made available under
+the terms of the Eclipse Public License 2.0 which accompanies this
+distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+or the Apache License, Version 2.0 which accompanies this distribution and
+is available at https://www.apache.org/licenses/LICENSE-2.0.
+
+This Source Code may also be made available under the following
+Secondary Licenses when the conditions for such availability set
+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+General Public License, version 2 with the GNU Classpath
+Exception [1] and GNU General Public License, version 2 with the
+OpenJDK Assembly Exception [2].
+
+[1] https://www.gnu.org/software/classpath/license.html
+[2] http://openjdk.java.net/legal/assembly-exception.html
+
+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+-->
+
+Building OpenJDK Version 10 with OpenJ9
+======================================
+
+Our website describes a simple [build process](http://www.eclipse.org/openj9/oj9_build.html)
+that uses Docker and Dockerfiles to create a build environment that contains everything
+you need to easily build a Linux binary of **OpenJDK V10** with the Eclipse OpenJ9 virtual machine.
+A more complete set of build instructions are included here for multiple platforms:
+
+- [Linux :penguin:](#linux)
+- [AIX :blue_book:](#aix)
+- [Windows :ledger:](#windows)
+- [MacOS :apple:](#macos)
+- [ARM :iphone:](#arm)
+
+----------------------------------
+
+## Linux
+:penguin:
+This build process provides detailed instructions for building a Linux x86-64 binary of **OpenJDK V10** with OpenJ9 on Ubuntu 16.04. The binary can be built directly on your system, in a virtual
+machine, or in a Docker container :whale:.
+
+If you are using a different Linux distribution, you might have to review the list of libraries that are bundled with your distribution and/or modify the instructions to use equivalent commands to the Advanced Packaging Tool (APT). For example, for Centos, substitute the `apt-get` command with `yum`.
+
+If you want to build a binary for Linux on a different architecture, such as Power Systems&trade; or z Systems&trade;, the process is very similar and any additional information for those architectures are included as Notes :pencil: as we go along.
+
+### 1. Prepare your system
+:penguin:
+Instructions are provided for preparing your system with and without the use of Docker technology.
+
+Skip to [Setting up your build environment without Docker](#setting-up-your-build-environment-without-docker).
+
+#### Setting up your build environment with Docker :whale:
+If you want to build a binary by using a Docker container, follow these steps to prepare your system:
+
+1. The first thing you need to do is install Docker. You can download the free Community edition from [here](https://docs.docker.com/engine/installation/), which also contains instructions for installing Docker on your system.  You should also read the [Getting started](https://docs.docker.com/get-started/) guide to familiarise yourself with the basic Docker concepts and terminology.
+
+2. Obtain the [Linux on 64-bit x86 systems Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) to build and run a container that has all the correct software pre-requisites.
+
+    :pencil: Dockerfiles are also available for the following Linux architectures: [Linux on 64-bit Power systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on 64-bit z Systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile)
+
+    Either download one of these Dockerfiles to your local system or copy and paste one of the following commands:
+
+  - For Linux on 64-bit x86 systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit Power systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit z Systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile
+```
+
+3. Next, run the following command to build a Docker image, called **openj9**:
+```
+docker build -t openj9 -f Dockerfile .
+```
+
+4. Start a Docker container from the **openj9** image with the following command, where `-v` maps any directory, `<host_directory>`,
+on your local system to the containers `/root/hostdir` directory so that you can store the binaries, once they are built:
+```
+docker run -v <host_directory>:/root/hostdir -it openj9
+```
+
+:pencil: Depending on your [Docker system configuration](https://docs.docker.com/engine/reference/commandline/cli/#description), you might need to prefix the `docker` commands with `sudo`.
+
+Now that you have the Docker image running, you are ready to move to the next step, [Get the source](#2-get-the-source).
+
+#### Setting up your build environment without Docker
+
+If you don't want to user Docker, you can still build an **OpenJDK V10** with OpenJ9 directly on your Ubuntu system or in a Ubuntu virtual machine. Use the
+[Linux on x86 Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) like a recipe card to determine the software dependencies
+that must be installed on the system, plus a few configuration steps.
+
+:pencil:
+Not on x86? We also have Dockerfiles for the following Linux architectures: [Linux on Power systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on z Systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile).
+
+1. Install the list of dependencies that can be obtained with the `apt-get` command from the following section of the Dockerfile:
+```
+apt-get update \
+  && apt-get install -qq -y --no-install-recommends \
+    autoconf \
+    ca-certificates \
+    ...
+```
+
+2. This build uses the same gcc and g++ compiler levels as OpenJDK, which might be
+backlevel compared with the versions you use on your system. Create links for
+the compilers with the following commands:
+```
+ln -s g++ /usr/bin/c++
+ln -s g++-4.8 /usr/bin/g++
+ln -s gcc /usr/bin/cc
+ln -s gcc-4.8 /usr/bin/gcc
+```
+
+3. Download and setup **freemarker.jar** into a directory. The example commands use `/root` to be consistent with the Docker instructions. If you aren't
+using Docker, you probably want to store the **freemarker.jar** in your home directory.
+```
+cd /root",changed `/root` to `/<my_home_dir>`. `/<my_home_dir>` is already being used for `$HOME` in this file.
111411097,2973ec8c95067111d45394a8c033b82e7c771331,buildenv/Build_Instructions_V10.md,True,"@@ -0,0 +1,431 @@
+<!--
+Copyright (c) 2018, 2018 IBM Corp. and others
+
+This program and the accompanying materials are made available under
+the terms of the Eclipse Public License 2.0 which accompanies this
+distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+or the Apache License, Version 2.0 which accompanies this distribution and
+is available at https://www.apache.org/licenses/LICENSE-2.0.
+
+This Source Code may also be made available under the following
+Secondary Licenses when the conditions for such availability set
+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+General Public License, version 2 with the GNU Classpath
+Exception [1] and GNU General Public License, version 2 with the
+OpenJDK Assembly Exception [2].
+
+[1] https://www.gnu.org/software/classpath/license.html
+[2] http://openjdk.java.net/legal/assembly-exception.html
+
+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+-->
+
+Building OpenJDK Version 10 with OpenJ9
+======================================
+
+Our website describes a simple [build process](http://www.eclipse.org/openj9/oj9_build.html)
+that uses Docker and Dockerfiles to create a build environment that contains everything
+you need to easily build a Linux binary of **OpenJDK V10** with the Eclipse OpenJ9 virtual machine.
+A more complete set of build instructions are included here for multiple platforms:
+
+- [Linux :penguin:](#linux)
+- [AIX :blue_book:](#aix)
+- [Windows :ledger:](#windows)
+- [MacOS :apple:](#macos)
+- [ARM :iphone:](#arm)
+
+----------------------------------
+
+## Linux
+:penguin:
+This build process provides detailed instructions for building a Linux x86-64 binary of **OpenJDK V10** with OpenJ9 on Ubuntu 16.04. The binary can be built directly on your system, in a virtual
+machine, or in a Docker container :whale:.
+
+If you are using a different Linux distribution, you might have to review the list of libraries that are bundled with your distribution and/or modify the instructions to use equivalent commands to the Advanced Packaging Tool (APT). For example, for Centos, substitute the `apt-get` command with `yum`.
+
+If you want to build a binary for Linux on a different architecture, such as Power Systems&trade; or z Systems&trade;, the process is very similar and any additional information for those architectures are included as Notes :pencil: as we go along.
+
+### 1. Prepare your system
+:penguin:
+Instructions are provided for preparing your system with and without the use of Docker technology.
+
+Skip to [Setting up your build environment without Docker](#setting-up-your-build-environment-without-docker).
+
+#### Setting up your build environment with Docker :whale:
+If you want to build a binary by using a Docker container, follow these steps to prepare your system:
+
+1. The first thing you need to do is install Docker. You can download the free Community edition from [here](https://docs.docker.com/engine/installation/), which also contains instructions for installing Docker on your system.  You should also read the [Getting started](https://docs.docker.com/get-started/) guide to familiarise yourself with the basic Docker concepts and terminology.
+
+2. Obtain the [Linux on 64-bit x86 systems Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) to build and run a container that has all the correct software pre-requisites.
+
+    :pencil: Dockerfiles are also available for the following Linux architectures: [Linux on 64-bit Power systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on 64-bit z Systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile)
+
+    Either download one of these Dockerfiles to your local system or copy and paste one of the following commands:
+
+  - For Linux on 64-bit x86 systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit Power systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit z Systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile
+```
+
+3. Next, run the following command to build a Docker image, called **openj9**:
+```
+docker build -t openj9 -f Dockerfile .
+```
+
+4. Start a Docker container from the **openj9** image with the following command, where `-v` maps any directory, `<host_directory>`,
+on your local system to the containers `/root/hostdir` directory so that you can store the binaries, once they are built:
+```
+docker run -v <host_directory>:/root/hostdir -it openj9
+```
+
+:pencil: Depending on your [Docker system configuration](https://docs.docker.com/engine/reference/commandline/cli/#description), you might need to prefix the `docker` commands with `sudo`.
+
+Now that you have the Docker image running, you are ready to move to the next step, [Get the source](#2-get-the-source).
+
+#### Setting up your build environment without Docker
+
+If you don't want to user Docker, you can still build an **OpenJDK V10** with OpenJ9 directly on your Ubuntu system or in a Ubuntu virtual machine. Use the
+[Linux on x86 Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) like a recipe card to determine the software dependencies
+that must be installed on the system, plus a few configuration steps.
+
+:pencil:
+Not on x86? We also have Dockerfiles for the following Linux architectures: [Linux on Power systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on z Systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile).
+
+1. Install the list of dependencies that can be obtained with the `apt-get` command from the following section of the Dockerfile:
+```
+apt-get update \
+  && apt-get install -qq -y --no-install-recommends \
+    autoconf \
+    ca-certificates \
+    ...
+```
+
+2. This build uses the same gcc and g++ compiler levels as OpenJDK, which might be
+backlevel compared with the versions you use on your system. Create links for
+the compilers with the following commands:
+```
+ln -s g++ /usr/bin/c++
+ln -s g++-4.8 /usr/bin/g++
+ln -s gcc /usr/bin/cc
+ln -s gcc-4.8 /usr/bin/gcc
+```
+
+3. Download and setup **freemarker.jar** into a directory. The example commands use `/root` to be consistent with the Docker instructions. If you aren't
+using Docker, you probably want to store the **freemarker.jar** in your home directory.
+```
+cd /root
+wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz
+tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2
+rm -f freemarker.tgz
+```
+
+4. Download and setup the boot JDK using the latest AdoptOpenJDK v9 build.
+```
+cd /root
+wget -O bootjdk9.tar.gz https://api.adoptopenjdk.net/openjdk9-openj9/releases/x64_linux/latest/binary
+tar -xzf bootjdk9.tar.gz
+rm -f bootjdk9.tar.gz
+ls | grep -i jdk | xargs -I % sh -c 'mv % bootjdk9'
+
+export JAVA_HOME=""/root/bootjdk9""
+export PATH=""${JAVA_HOME}/bin:${PATH}""
+```
+
+### 2. Get the source
+:penguin:
+First you need to clone the Extensions for OpenJDK for OpenJ9 project. This repository is a git mirror of OpenJDK without the HotSpot JVM, but with an **openj9** branch that contains a few necessary patches. Run the following command:
+```
+git clone https://github.com/ibmruntimes/openj9-openjdk-jdk10.git
+```
+Cloning this repository can take a while because OpenJDK is a large project! When the process is complete, change directory into the cloned repository:
+```
+cd openj9-openjdk-jdk10
+```
+Now fetch additional sources from the Eclipse OpenJ9 project and its clone of Eclipse OMR:
+```
+bash get_source.sh
+```
+
+### 3. Configure
+:penguin:
+When you have all the source files that you need, run the configure script, which detects how to build in the current build environment.
+```
+bash configure --with-freemarker-jar=/root/freemarker.jar
+```
+:warning: You must give an absolute path to freemarker.jar
+
+### 4. Build
+:penguin:
+Now you're ready to build **OpenJDK V10** with OpenJ9:
+```
+make all
+```
+:warning: If you just type `make`, rather than `make all` your build will fail, because the default `make` target is `exploded-image`. If you want to specify `make` instead of `make all`, you must add `--default-make-target=images` when you run the configure script. For more information, read this [issue](https://github.com/ibmruntimes/openj9-openjdk-jdk10/issues/34).","for JDK10, `bash configure --help` yields
```
  --with-default-make-target
                          set the default make target [exploded-image]
```
So, this issue still persists in JDK10. I changed the link to point at the JDK9 issue."
111412184,2973ec8c95067111d45394a8c033b82e7c771331,buildenv/Build_Instructions_V10.md,False,"@@ -0,0 +1,431 @@
+<!--
+Copyright (c) 2018, 2018 IBM Corp. and others
+
+This program and the accompanying materials are made available under
+the terms of the Eclipse Public License 2.0 which accompanies this
+distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+or the Apache License, Version 2.0 which accompanies this distribution and
+is available at https://www.apache.org/licenses/LICENSE-2.0.
+
+This Source Code may also be made available under the following
+Secondary Licenses when the conditions for such availability set
+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+General Public License, version 2 with the GNU Classpath
+Exception [1] and GNU General Public License, version 2 with the
+OpenJDK Assembly Exception [2].
+
+[1] https://www.gnu.org/software/classpath/license.html
+[2] http://openjdk.java.net/legal/assembly-exception.html
+
+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+-->
+
+Building OpenJDK Version 10 with OpenJ9
+======================================
+
+Our website describes a simple [build process](http://www.eclipse.org/openj9/oj9_build.html)
+that uses Docker and Dockerfiles to create a build environment that contains everything
+you need to easily build a Linux binary of **OpenJDK V10** with the Eclipse OpenJ9 virtual machine.
+A more complete set of build instructions are included here for multiple platforms:
+
+- [Linux :penguin:](#linux)
+- [AIX :blue_book:](#aix)
+- [Windows :ledger:](#windows)
+- [MacOS :apple:](#macos)
+- [ARM :iphone:](#arm)
+
+----------------------------------
+
+## Linux
+:penguin:
+This build process provides detailed instructions for building a Linux x86-64 binary of **OpenJDK V10** with OpenJ9 on Ubuntu 16.04. The binary can be built directly on your system, in a virtual
+machine, or in a Docker container :whale:.
+
+If you are using a different Linux distribution, you might have to review the list of libraries that are bundled with your distribution and/or modify the instructions to use equivalent commands to the Advanced Packaging Tool (APT). For example, for Centos, substitute the `apt-get` command with `yum`.
+
+If you want to build a binary for Linux on a different architecture, such as Power Systems&trade; or z Systems&trade;, the process is very similar and any additional information for those architectures are included as Notes :pencil: as we go along.
+
+### 1. Prepare your system
+:penguin:
+Instructions are provided for preparing your system with and without the use of Docker technology.
+
+Skip to [Setting up your build environment without Docker](#setting-up-your-build-environment-without-docker).
+
+#### Setting up your build environment with Docker :whale:
+If you want to build a binary by using a Docker container, follow these steps to prepare your system:
+
+1. The first thing you need to do is install Docker. You can download the free Community edition from [here](https://docs.docker.com/engine/installation/), which also contains instructions for installing Docker on your system.  You should also read the [Getting started](https://docs.docker.com/get-started/) guide to familiarise yourself with the basic Docker concepts and terminology.
+
+2. Obtain the [Linux on 64-bit x86 systems Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) to build and run a container that has all the correct software pre-requisites.
+
+    :pencil: Dockerfiles are also available for the following Linux architectures: [Linux on 64-bit Power systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on 64-bit z Systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile)
+
+    Either download one of these Dockerfiles to your local system or copy and paste one of the following commands:
+
+  - For Linux on 64-bit x86 systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit Power systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit z Systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile
+```
+
+3. Next, run the following command to build a Docker image, called **openj9**:
+```
+docker build -t openj9 -f Dockerfile .
+```
+
+4. Start a Docker container from the **openj9** image with the following command, where `-v` maps any directory, `<host_directory>`,
+on your local system to the containers `/root/hostdir` directory so that you can store the binaries, once they are built:
+```
+docker run -v <host_directory>:/root/hostdir -it openj9
+```
+
+:pencil: Depending on your [Docker system configuration](https://docs.docker.com/engine/reference/commandline/cli/#description), you might need to prefix the `docker` commands with `sudo`.
+
+Now that you have the Docker image running, you are ready to move to the next step, [Get the source](#2-get-the-source).
+
+#### Setting up your build environment without Docker
+
+If you don't want to user Docker, you can still build an **OpenJDK V10** with OpenJ9 directly on your Ubuntu system or in a Ubuntu virtual machine. Use the
+[Linux on x86 Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) like a recipe card to determine the software dependencies
+that must be installed on the system, plus a few configuration steps.
+
+:pencil:
+Not on x86? We also have Dockerfiles for the following Linux architectures: [Linux on Power systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on z Systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile).
+
+1. Install the list of dependencies that can be obtained with the `apt-get` command from the following section of the Dockerfile:
+```
+apt-get update \
+  && apt-get install -qq -y --no-install-recommends \
+    autoconf \
+    ca-certificates \
+    ...
+```
+
+2. This build uses the same gcc and g++ compiler levels as OpenJDK, which might be
+backlevel compared with the versions you use on your system. Create links for
+the compilers with the following commands:
+```
+ln -s g++ /usr/bin/c++
+ln -s g++-4.8 /usr/bin/g++
+ln -s gcc /usr/bin/cc
+ln -s gcc-4.8 /usr/bin/gcc
+```
+
+3. Download and setup **freemarker.jar** into a directory. The example commands use `/root` to be consistent with the Docker instructions. If you aren't
+using Docker, you probably want to store the **freemarker.jar** in your home directory.
+```
+cd /<my_home_dir>
+wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz
+tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2
+rm -f freemarker.tgz
+```
+
+4. Download and setup the boot JDK using the latest AdoptOpenJDK v9 build.
+```
+cd /<my_home_dir>
+wget -O bootjdk9.tar.gz https://api.adoptopenjdk.net/openjdk9-openj9/releases/x64_linux/latest/binary
+tar -xzf bootjdk9.tar.gz
+rm -f bootjdk9.tar.gz
+ls | grep -i jdk | xargs -I % sh -c 'mv % bootjdk9'
+
+export JAVA_HOME=""/root/bootjdk9""",This still contains `/root`
111412315,2973ec8c95067111d45394a8c033b82e7c771331,buildenv/Build_Instructions_V10.md,False,"@@ -0,0 +1,431 @@
+<!--
+Copyright (c) 2018, 2018 IBM Corp. and others
+
+This program and the accompanying materials are made available under
+the terms of the Eclipse Public License 2.0 which accompanies this
+distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+or the Apache License, Version 2.0 which accompanies this distribution and
+is available at https://www.apache.org/licenses/LICENSE-2.0.
+
+This Source Code may also be made available under the following
+Secondary Licenses when the conditions for such availability set
+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+General Public License, version 2 with the GNU Classpath
+Exception [1] and GNU General Public License, version 2 with the
+OpenJDK Assembly Exception [2].
+
+[1] https://www.gnu.org/software/classpath/license.html
+[2] http://openjdk.java.net/legal/assembly-exception.html
+
+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+-->
+
+Building OpenJDK Version 10 with OpenJ9
+======================================
+
+Our website describes a simple [build process](http://www.eclipse.org/openj9/oj9_build.html)
+that uses Docker and Dockerfiles to create a build environment that contains everything
+you need to easily build a Linux binary of **OpenJDK V10** with the Eclipse OpenJ9 virtual machine.
+A more complete set of build instructions are included here for multiple platforms:
+
+- [Linux :penguin:](#linux)
+- [AIX :blue_book:](#aix)
+- [Windows :ledger:](#windows)
+- [MacOS :apple:](#macos)
+- [ARM :iphone:](#arm)
+
+----------------------------------
+
+## Linux
+:penguin:
+This build process provides detailed instructions for building a Linux x86-64 binary of **OpenJDK V10** with OpenJ9 on Ubuntu 16.04. The binary can be built directly on your system, in a virtual
+machine, or in a Docker container :whale:.
+
+If you are using a different Linux distribution, you might have to review the list of libraries that are bundled with your distribution and/or modify the instructions to use equivalent commands to the Advanced Packaging Tool (APT). For example, for Centos, substitute the `apt-get` command with `yum`.
+
+If you want to build a binary for Linux on a different architecture, such as Power Systems&trade; or z Systems&trade;, the process is very similar and any additional information for those architectures are included as Notes :pencil: as we go along.
+
+### 1. Prepare your system
+:penguin:
+Instructions are provided for preparing your system with and without the use of Docker technology.
+
+Skip to [Setting up your build environment without Docker](#setting-up-your-build-environment-without-docker).
+
+#### Setting up your build environment with Docker :whale:
+If you want to build a binary by using a Docker container, follow these steps to prepare your system:
+
+1. The first thing you need to do is install Docker. You can download the free Community edition from [here](https://docs.docker.com/engine/installation/), which also contains instructions for installing Docker on your system.  You should also read the [Getting started](https://docs.docker.com/get-started/) guide to familiarise yourself with the basic Docker concepts and terminology.
+
+2. Obtain the [Linux on 64-bit x86 systems Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) to build and run a container that has all the correct software pre-requisites.
+
+    :pencil: Dockerfiles are also available for the following Linux architectures: [Linux on 64-bit Power systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on 64-bit z Systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile)
+
+    Either download one of these Dockerfiles to your local system or copy and paste one of the following commands:
+
+  - For Linux on 64-bit x86 systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit Power systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit z Systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile
+```
+
+3. Next, run the following command to build a Docker image, called **openj9**:
+```
+docker build -t openj9 -f Dockerfile .
+```
+
+4. Start a Docker container from the **openj9** image with the following command, where `-v` maps any directory, `<host_directory>`,
+on your local system to the containers `/root/hostdir` directory so that you can store the binaries, once they are built:
+```
+docker run -v <host_directory>:/root/hostdir -it openj9
+```
+
+:pencil: Depending on your [Docker system configuration](https://docs.docker.com/engine/reference/commandline/cli/#description), you might need to prefix the `docker` commands with `sudo`.
+
+Now that you have the Docker image running, you are ready to move to the next step, [Get the source](#2-get-the-source).
+
+#### Setting up your build environment without Docker
+
+If you don't want to user Docker, you can still build an **OpenJDK V10** with OpenJ9 directly on your Ubuntu system or in a Ubuntu virtual machine. Use the
+[Linux on x86 Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) like a recipe card to determine the software dependencies
+that must be installed on the system, plus a few configuration steps.
+
+:pencil:
+Not on x86? We also have Dockerfiles for the following Linux architectures: [Linux on Power systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on z Systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile).
+
+1. Install the list of dependencies that can be obtained with the `apt-get` command from the following section of the Dockerfile:
+```
+apt-get update \
+  && apt-get install -qq -y --no-install-recommends \
+    autoconf \
+    ca-certificates \
+    ...
+```
+
+2. This build uses the same gcc and g++ compiler levels as OpenJDK, which might be
+backlevel compared with the versions you use on your system. Create links for
+the compilers with the following commands:
+```
+ln -s g++ /usr/bin/c++
+ln -s g++-4.8 /usr/bin/g++
+ln -s gcc /usr/bin/cc
+ln -s gcc-4.8 /usr/bin/gcc
+```
+
+3. Download and setup **freemarker.jar** into a directory. The example commands use `/root` to be consistent with the Docker instructions. If you aren't","Here is the explanation about `/root` I missed, which can be deleted."
111412739,2973ec8c95067111d45394a8c033b82e7c771331,buildenv/Build_Instructions_V10.md,True,"@@ -0,0 +1,431 @@
+<!--
+Copyright (c) 2018, 2018 IBM Corp. and others
+
+This program and the accompanying materials are made available under
+the terms of the Eclipse Public License 2.0 which accompanies this
+distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+or the Apache License, Version 2.0 which accompanies this distribution and
+is available at https://www.apache.org/licenses/LICENSE-2.0.
+
+This Source Code may also be made available under the following
+Secondary Licenses when the conditions for such availability set
+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+General Public License, version 2 with the GNU Classpath
+Exception [1] and GNU General Public License, version 2 with the
+OpenJDK Assembly Exception [2].
+
+[1] https://www.gnu.org/software/classpath/license.html
+[2] http://openjdk.java.net/legal/assembly-exception.html
+
+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+-->
+
+Building OpenJDK Version 10 with OpenJ9
+======================================
+
+Our website describes a simple [build process](http://www.eclipse.org/openj9/oj9_build.html)
+that uses Docker and Dockerfiles to create a build environment that contains everything
+you need to easily build a Linux binary of **OpenJDK V10** with the Eclipse OpenJ9 virtual machine.
+A more complete set of build instructions are included here for multiple platforms:
+
+- [Linux :penguin:](#linux)
+- [AIX :blue_book:](#aix)
+- [Windows :ledger:](#windows)
+- [MacOS :apple:](#macos)
+- [ARM :iphone:](#arm)
+
+----------------------------------
+
+## Linux
+:penguin:
+This build process provides detailed instructions for building a Linux x86-64 binary of **OpenJDK V10** with OpenJ9 on Ubuntu 16.04. The binary can be built directly on your system, in a virtual
+machine, or in a Docker container :whale:.
+
+If you are using a different Linux distribution, you might have to review the list of libraries that are bundled with your distribution and/or modify the instructions to use equivalent commands to the Advanced Packaging Tool (APT). For example, for Centos, substitute the `apt-get` command with `yum`.
+
+If you want to build a binary for Linux on a different architecture, such as Power Systems&trade; or z Systems&trade;, the process is very similar and any additional information for those architectures are included as Notes :pencil: as we go along.
+
+### 1. Prepare your system
+:penguin:
+Instructions are provided for preparing your system with and without the use of Docker technology.
+
+Skip to [Setting up your build environment without Docker](#setting-up-your-build-environment-without-docker).
+
+#### Setting up your build environment with Docker :whale:
+If you want to build a binary by using a Docker container, follow these steps to prepare your system:
+
+1. The first thing you need to do is install Docker. You can download the free Community edition from [here](https://docs.docker.com/engine/installation/), which also contains instructions for installing Docker on your system.  You should also read the [Getting started](https://docs.docker.com/get-started/) guide to familiarise yourself with the basic Docker concepts and terminology.
+
+2. Obtain the [Linux on 64-bit x86 systems Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) to build and run a container that has all the correct software pre-requisites.
+
+    :pencil: Dockerfiles are also available for the following Linux architectures: [Linux on 64-bit Power systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on 64-bit z Systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile)
+
+    Either download one of these Dockerfiles to your local system or copy and paste one of the following commands:
+
+  - For Linux on 64-bit x86 systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit Power systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit z Systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile
+```
+
+3. Next, run the following command to build a Docker image, called **openj9**:
+```
+docker build -t openj9 -f Dockerfile .
+```
+
+4. Start a Docker container from the **openj9** image with the following command, where `-v` maps any directory, `<host_directory>`,
+on your local system to the containers `/root/hostdir` directory so that you can store the binaries, once they are built:
+```
+docker run -v <host_directory>:/root/hostdir -it openj9
+```
+
+:pencil: Depending on your [Docker system configuration](https://docs.docker.com/engine/reference/commandline/cli/#description), you might need to prefix the `docker` commands with `sudo`.
+
+Now that you have the Docker image running, you are ready to move to the next step, [Get the source](#2-get-the-source).
+
+#### Setting up your build environment without Docker
+
+If you don't want to user Docker, you can still build an **OpenJDK V10** with OpenJ9 directly on your Ubuntu system or in a Ubuntu virtual machine. Use the
+[Linux on x86 Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) like a recipe card to determine the software dependencies
+that must be installed on the system, plus a few configuration steps.
+
+:pencil:
+Not on x86? We also have Dockerfiles for the following Linux architectures: [Linux on Power systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on z Systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile).
+
+1. Install the list of dependencies that can be obtained with the `apt-get` command from the following section of the Dockerfile:
+```
+apt-get update \
+  && apt-get install -qq -y --no-install-recommends \
+    autoconf \
+    ca-certificates \
+    ...
+```
+
+2. This build uses the same gcc and g++ compiler levels as OpenJDK, which might be
+backlevel compared with the versions you use on your system. Create links for
+the compilers with the following commands:
+```
+ln -s g++ /usr/bin/c++
+ln -s g++-4.8 /usr/bin/g++
+ln -s gcc /usr/bin/cc
+ln -s gcc-4.8 /usr/bin/gcc
+```
+
+3. Download and setup **freemarker.jar** into a directory. The example commands use `/root` to be consistent with the Docker instructions. If you aren't
+using Docker, you probably want to store the **freemarker.jar** in your home directory.
+```
+cd /root
+wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz
+tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2
+rm -f freemarker.tgz
+```
+
+4. Download and setup the boot JDK using the latest AdoptOpenJDK v9 build.
+```
+cd /root
+wget -O bootjdk9.tar.gz https://api.adoptopenjdk.net/openjdk9-openj9/releases/x64_linux/latest/binary
+tar -xzf bootjdk9.tar.gz
+rm -f bootjdk9.tar.gz
+ls | grep -i jdk | xargs -I % sh -c 'mv % bootjdk9'
+
+export JAVA_HOME=""/root/bootjdk9""
+export PATH=""${JAVA_HOME}/bin:${PATH}""
+```
+
+### 2. Get the source
+:penguin:
+First you need to clone the Extensions for OpenJDK for OpenJ9 project. This repository is a git mirror of OpenJDK without the HotSpot JVM, but with an **openj9** branch that contains a few necessary patches. Run the following command:
+```
+git clone https://github.com/ibmruntimes/openj9-openjdk-jdk10.git
+```
+Cloning this repository can take a while because OpenJDK is a large project! When the process is complete, change directory into the cloned repository:
+```
+cd openj9-openjdk-jdk10
+```
+Now fetch additional sources from the Eclipse OpenJ9 project and its clone of Eclipse OMR:
+```
+bash get_source.sh
+```
+
+### 3. Configure
+:penguin:
+When you have all the source files that you need, run the configure script, which detects how to build in the current build environment.
+```
+bash configure --with-freemarker-jar=/root/freemarker.jar
+```
+:warning: You must give an absolute path to freemarker.jar
+
+### 4. Build
+:penguin:
+Now you're ready to build **OpenJDK V10** with OpenJ9:
+```
+make all
+```
+:warning: If you just type `make`, rather than `make all` your build will fail, because the default `make` target is `exploded-image`. If you want to specify `make` instead of `make all`, you must add `--default-make-target=images` when you run the configure script. For more information, read this [issue](https://github.com/ibmruntimes/openj9-openjdk-jdk10/issues/34).
+
+Two Java builds are produced: a full developer kit (jdk) and a runtime environment (jre)
+- **build/linux-x86_64-normal-server-release/images/jdk**
+- **build/linux-x86_64-normal-server-release/images/jre**
+
+    :whale: If you built your binaries in a Docker container, copy the binaries to the containers **/root/hostdir** directory so that you can access them on your local system. You'll find them in the directory you set for `<host_directory>` when you started your Docker container. See [Setting up your build environment with Docker](#setting-up-your-build-environment-with-docker).
+
+    :pencil: On other architectures the **/jdk** and **/jre** directories are in **build/linux-ppc64le-normal-server-release/images** (Linux on 64-bit Power systems) and **build/linux-s390x-normal-server-release/images** (Linux on 64-bit z Systems)
+
+### 5. Test
+:penguin:
+For a simple test, try running the `java -version` command.
+Change to the /jre directory:
+```
+cd build/linux-x86_64-normal-server-release/images/jre
+```
+Run:
+```
+./bin/java -version
+```
+
+Here is some sample output:
+
+```
+openjdk version ""10-internal"" 2018-03-20
+OpenJDK Runtime Environment (build 10-internal+0-adhoc..openj9-openjdk-jdk10)
+Eclipse OpenJ9 VM (build master-4ecf784, JRE 10 Linux amd64-64 Compressed References 20180411_000000 (JIT enabled, AOT enabled)
+OpenJ9   - 4ecf784
+OMR      - cb9e24d
+JCL      - eaa06eb based on jdk-10+46)
+```
+:penguin: *Congratulations!* :tada:
+
+----------------------------------
+
+## AIX
+:blue_book:
+
+:construction:
+This section is still under construction. Further contributions expected.","@jdekonin said that we currently use Ansible files to setup AIX machines. `yum_install_aix-ppc64.txt` seems to be out of sync with the current Ansible files. So, we should keep the warning. 

To test `yum shell yum_install_aix-ppc64.txt`, one needs to have a personal AIX machines. We can't test `yum shell yum_install_aix-ppc64.txt` on our local machines.  I was planning to open an issue to test `yum_install_aix-ppc64.txt` (jdk8, jdk9 and jdk10) once these changes are accepted."
111412874,2973ec8c95067111d45394a8c033b82e7c771331,buildenv/Build_Instructions_V10.md,False,"@@ -0,0 +1,431 @@
+<!--
+Copyright (c) 2018, 2018 IBM Corp. and others
+
+This program and the accompanying materials are made available under
+the terms of the Eclipse Public License 2.0 which accompanies this
+distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+or the Apache License, Version 2.0 which accompanies this distribution and
+is available at https://www.apache.org/licenses/LICENSE-2.0.
+
+This Source Code may also be made available under the following
+Secondary Licenses when the conditions for such availability set
+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+General Public License, version 2 with the GNU Classpath
+Exception [1] and GNU General Public License, version 2 with the
+OpenJDK Assembly Exception [2].
+
+[1] https://www.gnu.org/software/classpath/license.html
+[2] http://openjdk.java.net/legal/assembly-exception.html
+
+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+-->
+
+Building OpenJDK Version 10 with OpenJ9
+======================================
+
+Our website describes a simple [build process](http://www.eclipse.org/openj9/oj9_build.html)
+that uses Docker and Dockerfiles to create a build environment that contains everything
+you need to easily build a Linux binary of **OpenJDK V10** with the Eclipse OpenJ9 virtual machine.
+A more complete set of build instructions are included here for multiple platforms:
+
+- [Linux :penguin:](#linux)
+- [AIX :blue_book:](#aix)
+- [Windows :ledger:](#windows)
+- [MacOS :apple:](#macos)
+- [ARM :iphone:](#arm)
+
+----------------------------------
+
+## Linux
+:penguin:
+This build process provides detailed instructions for building a Linux x86-64 binary of **OpenJDK V10** with OpenJ9 on Ubuntu 16.04. The binary can be built directly on your system, in a virtual
+machine, or in a Docker container :whale:.
+
+If you are using a different Linux distribution, you might have to review the list of libraries that are bundled with your distribution and/or modify the instructions to use equivalent commands to the Advanced Packaging Tool (APT). For example, for Centos, substitute the `apt-get` command with `yum`.
+
+If you want to build a binary for Linux on a different architecture, such as Power Systems&trade; or z Systems&trade;, the process is very similar and any additional information for those architectures are included as Notes :pencil: as we go along.
+
+### 1. Prepare your system
+:penguin:
+Instructions are provided for preparing your system with and without the use of Docker technology.
+
+Skip to [Setting up your build environment without Docker](#setting-up-your-build-environment-without-docker).
+
+#### Setting up your build environment with Docker :whale:
+If you want to build a binary by using a Docker container, follow these steps to prepare your system:
+
+1. The first thing you need to do is install Docker. You can download the free Community edition from [here](https://docs.docker.com/engine/installation/), which also contains instructions for installing Docker on your system.  You should also read the [Getting started](https://docs.docker.com/get-started/) guide to familiarise yourself with the basic Docker concepts and terminology.
+
+2. Obtain the [Linux on 64-bit x86 systems Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) to build and run a container that has all the correct software pre-requisites.
+
+    :pencil: Dockerfiles are also available for the following Linux architectures: [Linux on 64-bit Power systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on 64-bit z Systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile)
+
+    Either download one of these Dockerfiles to your local system or copy and paste one of the following commands:
+
+  - For Linux on 64-bit x86 systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit Power systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit z Systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile
+```
+
+3. Next, run the following command to build a Docker image, called **openj9**:
+```
+docker build -t openj9 -f Dockerfile .
+```
+
+4. Start a Docker container from the **openj9** image with the following command, where `-v` maps any directory, `<host_directory>`,
+on your local system to the containers `/root/hostdir` directory so that you can store the binaries, once they are built:
+```
+docker run -v <host_directory>:/root/hostdir -it openj9
+```
+
+:pencil: Depending on your [Docker system configuration](https://docs.docker.com/engine/reference/commandline/cli/#description), you might need to prefix the `docker` commands with `sudo`.
+
+Now that you have the Docker image running, you are ready to move to the next step, [Get the source](#2-get-the-source).
+
+#### Setting up your build environment without Docker
+
+If you don't want to user Docker, you can still build an **OpenJDK V10** with OpenJ9 directly on your Ubuntu system or in a Ubuntu virtual machine. Use the
+[Linux on x86 Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) like a recipe card to determine the software dependencies
+that must be installed on the system, plus a few configuration steps.
+
+:pencil:
+Not on x86? We also have Dockerfiles for the following Linux architectures: [Linux on Power systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on z Systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile).
+
+1. Install the list of dependencies that can be obtained with the `apt-get` command from the following section of the Dockerfile:
+```
+apt-get update \
+  && apt-get install -qq -y --no-install-recommends \
+    autoconf \
+    ca-certificates \
+    ...
+```
+
+2. This build uses the same gcc and g++ compiler levels as OpenJDK, which might be
+backlevel compared with the versions you use on your system. Create links for
+the compilers with the following commands:
+```
+ln -s g++ /usr/bin/c++
+ln -s g++-4.8 /usr/bin/g++
+ln -s gcc /usr/bin/cc
+ln -s gcc-4.8 /usr/bin/gcc
+```
+
+3. Download and setup **freemarker.jar** into a directory. The example commands use `/root` to be consistent with the Docker instructions. If you aren't
+using Docker, you probably want to store the **freemarker.jar** in your home directory.
+```
+cd /<my_home_dir>
+wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz
+tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2
+rm -f freemarker.tgz
+```
+
+4. Download and setup the boot JDK using the latest AdoptOpenJDK v9 build.
+```
+cd /<my_home_dir>
+wget -O bootjdk9.tar.gz https://api.adoptopenjdk.net/openjdk9-openj9/releases/x64_linux/latest/binary
+tar -xzf bootjdk9.tar.gz
+rm -f bootjdk9.tar.gz
+ls | grep -i jdk | xargs -I % sh -c 'mv % bootjdk9'
+
+export JAVA_HOME=""/root/bootjdk9""
+export PATH=""${JAVA_HOME}/bin:${PATH}""
+```
+
+### 2. Get the source
+:penguin:
+First you need to clone the Extensions for OpenJDK for OpenJ9 project. This repository is a git mirror of OpenJDK without the HotSpot JVM, but with an **openj9** branch that contains a few necessary patches. Run the following command:
+```
+git clone https://github.com/ibmruntimes/openj9-openjdk-jdk10.git
+```
+Cloning this repository can take a while because OpenJDK is a large project! When the process is complete, change directory into the cloned repository:
+```
+cd openj9-openjdk-jdk10
+```
+Now fetch additional sources from the Eclipse OpenJ9 project and its clone of Eclipse OMR:
+```
+bash get_source.sh
+```
+
+### 3. Configure
+:penguin:
+When you have all the source files that you need, run the configure script, which detects how to build in the current build environment.
+```
+bash configure --with-freemarker-jar=/root/freemarker.jar","Better fix this ref to `/root` as well, and mention `<my_home_dir>` will be `/root` when using docker."
111414225,2973ec8c95067111d45394a8c033b82e7c771331,buildenv/Build_Instructions_V10.md,True,"@@ -0,0 +1,431 @@
+<!--
+Copyright (c) 2018, 2018 IBM Corp. and others
+
+This program and the accompanying materials are made available under
+the terms of the Eclipse Public License 2.0 which accompanies this
+distribution and is available at https://www.eclipse.org/legal/epl-2.0/
+or the Apache License, Version 2.0 which accompanies this distribution and
+is available at https://www.apache.org/licenses/LICENSE-2.0.
+
+This Source Code may also be made available under the following
+Secondary Licenses when the conditions for such availability set
+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
+General Public License, version 2 with the GNU Classpath
+Exception [1] and GNU General Public License, version 2 with the
+OpenJDK Assembly Exception [2].
+
+[1] https://www.gnu.org/software/classpath/license.html
+[2] http://openjdk.java.net/legal/assembly-exception.html
+
+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
+-->
+
+Building OpenJDK Version 10 with OpenJ9
+======================================
+
+Our website describes a simple [build process](http://www.eclipse.org/openj9/oj9_build.html)
+that uses Docker and Dockerfiles to create a build environment that contains everything
+you need to easily build a Linux binary of **OpenJDK V10** with the Eclipse OpenJ9 virtual machine.
+A more complete set of build instructions are included here for multiple platforms:
+
+- [Linux :penguin:](#linux)
+- [AIX :blue_book:](#aix)
+- [Windows :ledger:](#windows)
+- [MacOS :apple:](#macos)
+- [ARM :iphone:](#arm)
+
+----------------------------------
+
+## Linux
+:penguin:
+This build process provides detailed instructions for building a Linux x86-64 binary of **OpenJDK V10** with OpenJ9 on Ubuntu 16.04. The binary can be built directly on your system, in a virtual
+machine, or in a Docker container :whale:.
+
+If you are using a different Linux distribution, you might have to review the list of libraries that are bundled with your distribution and/or modify the instructions to use equivalent commands to the Advanced Packaging Tool (APT). For example, for Centos, substitute the `apt-get` command with `yum`.
+
+If you want to build a binary for Linux on a different architecture, such as Power Systems&trade; or z Systems&trade;, the process is very similar and any additional information for those architectures are included as Notes :pencil: as we go along.
+
+### 1. Prepare your system
+:penguin:
+Instructions are provided for preparing your system with and without the use of Docker technology.
+
+Skip to [Setting up your build environment without Docker](#setting-up-your-build-environment-without-docker).
+
+#### Setting up your build environment with Docker :whale:
+If you want to build a binary by using a Docker container, follow these steps to prepare your system:
+
+1. The first thing you need to do is install Docker. You can download the free Community edition from [here](https://docs.docker.com/engine/installation/), which also contains instructions for installing Docker on your system.  You should also read the [Getting started](https://docs.docker.com/get-started/) guide to familiarise yourself with the basic Docker concepts and terminology.
+
+2. Obtain the [Linux on 64-bit x86 systems Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) to build and run a container that has all the correct software pre-requisites.
+
+    :pencil: Dockerfiles are also available for the following Linux architectures: [Linux on 64-bit Power systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on 64-bit z Systems&trade;](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile)
+
+    Either download one of these Dockerfiles to your local system or copy and paste one of the following commands:
+
+  - For Linux on 64-bit x86 systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit Power systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile
+```
+
+  - For Linux on 64-bit z Systems, run:
+```
+wget https://raw.githubusercontent.com/eclipse/openj9/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile
+```
+
+3. Next, run the following command to build a Docker image, called **openj9**:
+```
+docker build -t openj9 -f Dockerfile .
+```
+
+4. Start a Docker container from the **openj9** image with the following command, where `-v` maps any directory, `<host_directory>`,
+on your local system to the containers `/root/hostdir` directory so that you can store the binaries, once they are built:
+```
+docker run -v <host_directory>:/root/hostdir -it openj9
+```
+
+:pencil: Depending on your [Docker system configuration](https://docs.docker.com/engine/reference/commandline/cli/#description), you might need to prefix the `docker` commands with `sudo`.
+
+Now that you have the Docker image running, you are ready to move to the next step, [Get the source](#2-get-the-source).
+
+#### Setting up your build environment without Docker
+
+If you don't want to user Docker, you can still build an **OpenJDK V10** with OpenJ9 directly on your Ubuntu system or in a Ubuntu virtual machine. Use the
+[Linux on x86 Dockerfile](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/x86_64/ubuntu16/Dockerfile) like a recipe card to determine the software dependencies
+that must be installed on the system, plus a few configuration steps.
+
+:pencil:
+Not on x86? We also have Dockerfiles for the following Linux architectures: [Linux on Power systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/ppc64le/ubuntu16/Dockerfile) and [Linux on z Systems](https://github.com/eclipse/openj9/blob/master/buildenv/docker/jdk10/s390x/ubuntu16/Dockerfile).
+
+1. Install the list of dependencies that can be obtained with the `apt-get` command from the following section of the Dockerfile:
+```
+apt-get update \
+  && apt-get install -qq -y --no-install-recommends \
+    autoconf \
+    ca-certificates \
+    ...
+```
+
+2. This build uses the same gcc and g++ compiler levels as OpenJDK, which might be
+backlevel compared with the versions you use on your system. Create links for
+the compilers with the following commands:
+```
+ln -s g++ /usr/bin/c++
+ln -s g++-4.8 /usr/bin/g++
+ln -s gcc /usr/bin/cc
+ln -s gcc-4.8 /usr/bin/gcc
+```
+
+3. Download and setup **freemarker.jar** into a directory. The example commands use `/root` to be consistent with the Docker instructions. If you aren't
+using Docker, you probably want to store the **freemarker.jar** in your home directory.
+```
+cd /<my_home_dir>
+wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz
+tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2
+rm -f freemarker.tgz
+```
+
+4. Download and setup the boot JDK using the latest AdoptOpenJDK v9 build.
+```
+cd /<my_home_dir>
+wget -O bootjdk9.tar.gz https://api.adoptopenjdk.net/openjdk9-openj9/releases/x64_linux/latest/binary
+tar -xzf bootjdk9.tar.gz
+rm -f bootjdk9.tar.gz
+ls | grep -i jdk | xargs -I % sh -c 'mv % bootjdk9'
+
+export JAVA_HOME=""/root/bootjdk9""",removed.
